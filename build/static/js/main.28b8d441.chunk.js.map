{"version":3,"sources":["App.js","components/Navbar/Navbar.js","components/Footer/SocialIcons.js","components/Footer/Footer.js","Images/munchiesHero.png","components/Landing/Hero.js","components/Landing/Form/FormInputs.js","components/Landing/Form/FormButtons.js","components/Landing/Form/LoginFormErrMsg.js","components/Landing/Form/LoginForm.js","components/Landing/Form/SignUpForm.js","services/login.js","services/register.js","components/Landing/Form/Form.js","Images/locations.svg","Images/rekindle.svg","Images/supportLocal.svg","components/Landing/LandingForm.js","components/Landing/Landing.js","foodImages/American.jpg","foodImages/Asian.jpg","foodImages/Bakery.jpg","foodImages/BBQ.jpg","foodImages/Breakfast.jpg","foodImages/BubbleTea.jpg","foodImages/Burgers.jpg","foodImages/Caribbean.jpg","foodImages/Cafe.png","foodImages/Chinese.jpg","foodImages/Coffee.jpg","foodImages/Columbian.jpg","foodImages/ComfortFood.jpg","foodImages/Deli.jpeg","foodImages/Desserts.jpg","foodImages/Dominican.jpg","foodImages/FastFood.jpg","foodImages/GlutenFree.jpeg","foodImages/Greek.jpg","foodImages/Haitian.jpg","foodImages/Halal.jpg","foodImages/Healthy.jpg","foodImages/IceCream.jpg","foodImages/Indian.jpg","foodImages/Italian.jpeg","foodImages/Jamacian.jpg","foodImages/Japanese.jpg","foodImages/Jewish.jpg","foodImages/Korean.jpg","foodImages/Kosher.jpg","foodImages/LatinAmerican.jpg","foodImages/Malaysian.jpg","foodImages/Mediterranean.jpg","foodImages/Mexican.jpg","foodImages/MiddleEastern.jpg","foodImages/Pizza.jpg","foodImages/Ramen.jpg","foodImages/Sandwiches.jpg","foodImages/Seafood.jpg","foodImages/Smoothies.jpg","foodImages/SoulFood.png","foodImages/Spanish.jpg","foodImages/StreetFood.jpg","foodImages/Sushi.jpg","foodImages/Taiwanese.jpg","foodImages/Thai.jpg","foodImages/Vegan.jpg","foodImages/Vegetarian.jpg","foodImages/Viet.jpg","foodImages/Wings.jpg","foodImages/Wraps.jpg","components/Room/YelpAPI.js","Images/review.svg","components/Room/FoodCards.js","components/Room/Selection.js","components/Room/Chat.js","components/Room/Room.js","Images/react.svg","Images/StyledComponents.png","Images/Chakra.jpg","Images/nodejs.svg","Images/mongodb.svg","Images/Socketio.png","About.js","index.js"],"names":["socket","Nav","styled","nav","Navbar","motion","button","whileHover","scale","to","fontFamily","color","fontSize","ml","_hover","justifyContent","m","bgColor","SocialIcons","variant","mr","target","href","Footer","as","mx","w","py","px","base","md","mt","bottom","direction","spacing","align","justify","Hero","src","munchiesHero","draggable","objectFit","boxSize","UserNameInput","input","EmailInput","PasswordInput","SignUpButton","props","showLogin","LoginButton","SubmitButton","LoginErrorMessage","p","LoginFormErrMsg","errorMessage","LoginFormContainer","div","InputContainer","ButtonGroup","ErrorText","LoginForm","handleLoginClick","handleSignUpClick","handleLoginSubmit","useForm","criteriaMode","register","handleSubmit","errors","formState","onSubmit","type","onClick","pointerEvents","children","placeholder","required","minLength","value","message","name","render","messages","Object","entries","map","style","textAlign","SignUpFormContainer","SignUpForm","handleSignUpSubmit","pattern","login","credentials","a","axios","post","response","data","LandingFormTitle","h1","Form","history","useHistory","useState","setShowLogin","setErrorMessage","onLoginSubmit","console","log","username","password","loginService","returnUserData","window","sessionStorage","setItem","JSON","stringify","push","setTimeout","onSignUpSubmit","email","registerService","FormContainer","LandingForm","myRef","useRef","flexDirection","size","current","scrollIntoView","alignItems","mb","lg","h2","fontWeight","span","locations","rekindle","supportLocal","ref","marginBottom","Landing","useEffect","scrollTo","locationToYelp","searchTerms","url","URL","search","URLSearchParams","get","yelpResponse","FoodCards","yelpAPIData","toast","useToast","savedCards","setSavedCards","length","len","setLen","displayVerdict","setDisplayVerdict","restaurant","address","location","display_address","join","className","onSwipe","dir","swiped","preventSwipe","bg","shadow","rounded","overflow","image_url","width","h","fit","objectPosition","alt","rating","review_count","undefined","price","rel","label","colorScheme","isRound","icon","Close","title","description","status","duration","isClosable","Star","Check","id","review","columns","Title","Selection","foodCategories","image","American","Asian","Bakery","BBQ","Breakfast","BubbleTea","Burgers","Cafe","Carribean","Chinese","Coffee","Columbian","ComfortFood","Deli","Desserts","Dominican","FastFood","GlutenFree","Greek","Haitian","Halal","Healthy","IceCream","Indian","Italian","Jamacian","Japanese","Jewish","Smoothies","Korean","Kosher","LatinAmerican","Malaysian","Mediterranean","Mexican","MiddleEastern","Pizza","Ramen","Sandwiches","Seafood","SoulFood","Spanish","StreetFood","Sushi","Taiwanese","Thai","Vegan","Vegetarian","Viet","Wings","Wraps","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","parse","getItem","cuisineData","setCuisineData","guestData","setGuestData","setYelpAPIData","ready","setReady","guestReady","setGuestReady","setLocation","guestLocation","setGuestLocation","midpointLatitude","midpointLongitude","parameters","latitude","longitude","term","callYelp","locationFromBrowser","lat","coords","lon","latlon","emit","on","sender","initial","animate","rotate","transition","stiffness","damping","backgroundColor","flexWrap","food","margin","includes","arr","filter","item","concat","handleClick","OuterBox","RoomNumber","h3","EnterRoomContainer","RoomButton","RoomInput","ChatContainer","MessagesContainer","UserMessage","GuestMessage","NameAndMsgContainer","Message","guest","Name","MessageForm","form","MessageInput","SendButton","Chat","setMessages","setMessage","room","setRoom","guestName","setGuestName","messageObj","userGuest","off","onChange","e","msg","index","preventDefault","Wrapper","LeftAlign","section","RightAlign","Room","About","textDecoration","hasArrow","arrowSize","gutter","react","StyledComponents","Chakra","nodejs","mongodb","Socketio","App","io","exact","path","ReactDOM","document","getElementById"],"mappings":"uOAWIA,E,0GCHEC,EAAMC,IAAOC,IAAV,gOA8CMC,GAhCA,WACb,OACE,eAACH,EAAD,WACE,cAACI,EAAA,EAAOC,OAAR,CAAeC,WAAY,CAAEC,MAAO,KAApC,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CACEC,WAAW,UACXC,MAAM,QACNC,SAAS,OACTC,GAAG,SACHC,OAAQ,CAAEH,MAAO,WALnB,0BAWJ,cAAC,IAAD,CAAMI,eAAe,gBAArB,SACE,cAAC,IAAD,CAAMN,GAAG,QAAT,SACE,cAAC,IAAD,CACEO,EAAE,OACFC,QAAQ,QACRP,WAAW,QACXI,OAAQ,CAAEG,QAAS,WAJrB,2B,kDCXKC,GAxBK,WAClB,OACE,eAAC,KAAD,CAAaC,QAAQ,QAAQR,MAAM,QAAnC,UACE,cAAC,KAAD,CACES,GAAG,OACHC,OAAO,SACPV,MAAM,QACNG,OAAQ,CAAEH,MAAO,WACjBW,KAAK,6CALP,SAOE,cAAC,KAAD,CAAUV,SAAS,WAErB,cAAC,KAAD,CACEQ,GAAG,OACHC,OAAO,SACPV,MAAM,QACNG,OAAQ,CAAEH,MAAO,WAJnB,SAME,cAAC,KAAD,CAAOC,SAAS,eCsBTW,GAtCA,WACb,OACE,cAAC,KAAD,CACEC,GAAG,SACHC,GAAG,OACHC,EAAE,OACFC,GAAG,KACHC,GAAI,CAAEC,KAAM,IAAKC,GAAI,KACrBb,QAAQ,QACRc,GAAG,OACHC,OAAO,IART,SAUE,cAAC,KAAD,UACE,eAAC,KAAD,CACEC,UAAU,MACVC,QAAQ,IACRC,MAAM,SACNC,QAAQ,gBAJV,UAME,cAAC/B,EAAA,EAAOC,OAAR,CAAeC,WAAY,CAAEC,MAAO,KAApC,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CACEE,MAAM,QACNC,SAAS,OACTF,WAAW,UACXI,OAAQ,CAAEH,MAAO,WAJnB,0BAUJ,cAAC,GAAD,Y,UCtCK,OAA0B,yCCkB1B0B,GAdF,WAEX,OACE,cAAC,KAAD,UACE,cAAC,KAAD,CACEC,IAAKC,GACLC,UAAU,QACVC,UAAU,QACVC,QAAQ,Y,uGCVVC,GAAgBzC,IAAO0C,MAAV,6OAcbC,GAAa3C,IAAO0C,MAAV,6OAcVE,GAAgB5C,IAAO0C,MAAV,6OC3BbG,GAAe7C,IAAOI,OAAV,gSAMI,SAAC0C,GAAD,OAAaA,EAAMC,UAAwB,OAAZ,aAM7B,SAACD,GAAD,OAAaA,EAAMC,UAAwB,OAAZ,aAIjDC,GAAchD,IAAOI,OAAV,uTAMK,SAAC0C,GAAD,OAAYA,EAAMC,UAAY,UAAY,UAOtC,SAACD,GAAD,OAAYA,EAAMC,UAAY,UAAY,UAK9DE,GAAejD,IAAOI,OAAV,mS,kBCjCZ8C,GAAoBlD,IAAOmD,EAAV,oFAcRC,GARS,SAACN,GACvB,OAAgC,OAA5BA,EAAMI,kBACD,KAGF,cAACA,GAAD,UAAoBJ,EAAMO,gBCH7BC,GAAqBtD,IAAOuD,IAAV,2GAOlBC,GAAiBxD,IAAOuD,IAAV,qJASdE,GAAczD,IAAOuD,IAAV,0EAMXG,GAAY1D,IAAOmD,EAAV,iIAsGAQ,GA5FG,SAAC,GAMZ,IALLC,EAKI,EALJA,iBACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,kBACAf,EAEI,EAFJA,UACAM,EACI,EADJA,aAEA,EAIIU,aAAQ,CAAEC,aAAc,QAH1BC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAEf,OACE,sBAAME,SAAUH,EAAaJ,GAA7B,SACE,eAACR,GAAD,WACE,cAAC,GAAD,CAAiBD,aAAcA,IAC/B,eAACI,GAAD,WACE,cAACT,GAAD,CACEsB,KAAK,SACLC,QAASX,EACTb,UAAWA,EAHb,mBAOA,cAACF,GAAD,CACEyB,KAAK,SACLC,QAASV,EACTd,UAAWA,EAHb,wBAQF,cAAC,KAAD,UACE,eAACS,GAAD,WACE,cAAC,KAAD,CAAkBgB,cAAc,OAAOC,SAAU,cAAC,KAAD,MACjD,cAAChC,GAAD,cACEiC,YAAY,YACRT,EAAS,WAAY,CACvBU,SAAU,yBACVC,UAAW,CACTC,MAAO,EACPC,QAAS,gDAIf,cAAC,KAAD,CACEX,OAAQA,EACRY,KAAK,WACLC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAOA,EACHC,OAAOC,QAAQF,GAAUG,KAAI,oCAAEd,EAAF,KAAQQ,EAAR,YAC3B,cAACpB,GAAD,CAAW2B,MAAO,CAAEC,UAAW,UAA/B,SACGR,GAD6CR,MAIlD,aAKZ,cAAC,KAAD,UACE,eAACd,GAAD,WACE,cAAC,KAAD,CAAkBgB,cAAc,OAAOC,SAAU,cAAC,KAAD,MACjD,cAAC7B,GAAD,cACE8B,YAAY,WACZJ,KAAK,YACDL,EAAS,WAAY,CACvBU,SAAU,6BAGd,cAAC,KAAD,CACER,OAAQA,EACRY,KAAK,WACLC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAOA,EACHC,OAAOC,QAAQF,GAAUG,KAAI,oCAAEd,EAAF,KAAQQ,EAAR,YAC3B,cAACpB,GAAD,CAAW2B,MAAO,CAAEC,UAAW,UAA/B,SACGR,GAD6CR,MAIlD,aAMZ,cAACrB,GAAD,2B,UCtHFsC,GAAsBvF,IAAOuD,IAAV,2GAOnBC,GAAiBxD,IAAOuD,IAAV,qJASdE,GAAczD,IAAOuD,IAAV,0EAMXG,GAAY1D,IAAOmD,EAAV,iIAiIAqC,GAvHI,SAAC,GAKb,IAJL3B,EAII,EAJJA,kBACAD,EAGI,EAHJA,iBACA6B,EAEI,EAFJA,mBACA1C,EACI,EADJA,UAEA,EAIIgB,aAAQ,CAAEC,aAAc,QAH1BC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAEf,OACE,sBAAME,SAAUH,EAAauB,GAA7B,SACE,eAACF,GAAD,WACE,eAAC,GAAD,WACE,cAACvC,GAAD,CACEsB,KAAK,SACLC,QAASX,EACTb,UAAWA,EAHb,mBAOA,cAACF,GAAD,CACEyB,KAAK,SACLC,QAASV,EACTd,UAAWA,EAHb,wBAQF,cAAC,KAAD,UACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAkByB,cAAc,OAAOC,SAAU,cAAC,KAAD,MACjD,cAAChC,GAAD,cACEiC,YAAY,YACRT,EAAS,WAAY,CACvBU,SAAU,yBACVC,UAAW,CACTC,MAAO,EACPC,QAAS,8CAIf,cAAC,KAAD,CACEX,OAAQA,EACRY,KAAK,WACLC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAOA,EACHC,OAAOC,QAAQF,GAAUG,KAAI,oCAAEd,EAAF,KAAQQ,EAAR,YAC3B,cAAC,GAAD,CAAWO,MAAO,CAAEC,UAAW,UAA/B,SACGR,GAD6CR,MAIlD,aAKZ,cAAC,KAAD,UACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAkBE,cAAc,OAAOC,SAAU,cAAC,KAAD,MACjD,cAAC9B,GAAD,cACE+B,YAAY,gBACZJ,KAAK,SACDL,EAAS,QAAS,CACpBU,SAAU,6BAGd,cAAC,KAAD,CACER,OAAQA,EACRY,KAAK,WACLC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAOA,EACHC,OAAOC,QAAQF,GAAUG,KAAI,oCAAEd,EAAF,KAAQQ,EAAR,YAC3B,cAAC,GAAD,CAAWO,MAAO,CAAEC,UAAW,UAA/B,SACGR,GAD6CR,MAIlD,aAKZ,cAAC,KAAD,UACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAkBE,cAAc,OAAOC,SAAU,cAAC,KAAD,MACjD,cAAC7B,GAAD,cACE8B,YAAY,WACZJ,KAAK,YACDL,EAAS,WAAY,CACvBU,SAAU,yBACVe,QAAS,CACPb,MAAO,sCACPC,QACE,kHAIR,cAAC,KAAD,CACEX,OAAQA,EACRY,KAAK,WACLC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAOA,EACHC,OAAOC,QAAQF,GAAUG,KAAI,oCAAEd,EAAF,KAAQQ,EAAR,YAC3B,cAAC,GAAD,CAAWO,MAAO,CAAEC,UAAW,UAA/B,SACGR,GAD6CR,MAIlD,aAKZ,cAACrB,GAAD,CAAcqB,KAAK,SAAnB,0B,oBCrJO,IAAEqB,MALN,yCAAG,WAAMC,GAAN,gBAAAC,EAAA,sEACWC,KAAMC,KAHf,kCAG6BH,GAD/B,cACNI,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCKI,IAAEhC,SALH,yCAAG,WAAM2B,GAAN,gBAAAC,EAAA,sEACQC,KAAMC,KAHf,kCAG6BH,GAD5B,cACTI,EADS,yBAERA,EAASC,MAFD,2CAAH,uDCMRC,GAAmBlG,IAAOmG,GAAV,kJAgGPC,GAxFF,WACX,IAAIC,EAAUC,cACd,EAAkCC,oBAAS,GAA3C,oBAAOxD,EAAP,KAAkByD,EAAlB,KACA,EAAwCD,mBAAS,MAAjD,oBAAOlD,EAAP,KAAqBoD,EAArB,KAEM7C,EAAmB,kBAAM4C,GAAa,IACtC3C,EAAoB,kBAAM2C,GAAa,IAIvCE,EAAa,yCAAG,WAAOT,GAAP,oBAAAJ,EAAA,6DACpBc,QAAQC,IAAI,aAAcX,GAClBY,EAAuBZ,EAAvBY,SAAUC,EAAab,EAAba,SAFE,kBAKWC,GAAapB,MAAM,CAC9CkB,WACAC,aAPgB,OAKZE,EALY,OAUlBL,QAAQC,IAAI,mBAAoBI,GAC5BA,IACFC,OAAOC,eAAeC,QACpB,qBACAC,KAAKC,UAAUL,IAEjBX,EAAQiB,KAAK,UAhBG,kDAmBlBX,QAAQC,IAAR,MACAH,EAAgB,gCAChBc,YAAW,WACTd,EAAgB,QACf,KAvBe,0DAAH,sDA4Bbe,EAAc,yCAAG,WAAOvB,GAAP,oBAAAJ,EAAA,6DACrBc,QAAQC,IAAI,eAAgBX,GAEpBY,EAA8BZ,EAA9BY,SAAUC,EAAoBb,EAApBa,SAAUW,EAAUxB,EAAVwB,MAHP,SAKfC,GAAgBzD,SAAS,CAC7B4C,WACAC,WACAW,UARmB,OAWrBjB,GAAa,GAXQ,2CAAH,sDAcpB,OACE,qCACE,cAACN,GAAD,UACGnD,EACC,gCACE,0CACA,oBAAIsC,MAAO,CAAE7E,WAAY,SAAzB,8BAGF,gCACE,0CACA,oBAAI6E,MAAO,CAAE7E,WAAY,SAAzB,sCAKLuC,EACC,cAAC,GAAD,CACEc,kBAAmBA,EACnBD,iBAAkBA,EAClBE,kBAAmB4C,EACnB3D,UAAWA,EACXM,aAAcA,IAGhB,cAAC,GAAD,CACEQ,kBAAmBA,EACnBD,iBAAkBA,EAClB6B,mBAAoB+B,EACpBzE,UAAWA,QClGN,OAA0B,sCCA1B,OAA0B,qCCA1B,OAA0B,yCCSnC4E,GAAgB3H,IAAOuD,IAAV,8kBAwJJqE,GAzHK,WAClB,IAAMC,EAAQC,iBAAO,MAErB,OACE,eAAC,IAAD,CAAMC,cAAc,SAApB,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CACEC,KAAK,KACLjH,QAAQ,UACRH,OAAQ,CAAEG,QAAS,WACnBP,WAAW,QACX+D,QATc,kBAAMsD,EAAMI,QAAQC,kBAIpC,qBAYF,cAAC,KAAD,UACE,eAAC,IAAD,CAEE1G,EAAE,MACF2G,WAAW,SACXtH,eAAe,SAEfkH,cAAe,CAAC,SAAU,SAAU,MAAO,OAC3CK,GAAG,OAPL,UASE,cAAC,KAAD,UACE,eAAC,KAAD,CAAK3G,GAAI,GAAIC,GAAI,EAAGF,EAAG,CAAE6G,GAAI,QAA7B,UACE,eAAC,KAAOC,GAAR,CACE5H,SAAU,CAAEiB,KAAM,MAAOC,GAAI,OAC7BnB,MAAO,WACP8H,WAAW,OAHb,mCAKyB,IACvB,cAAC,KAAOC,KAAR,CAAa/H,MAAM,SAAnB,2BAEF,cAAC,KAAO0C,EAAR,CAAUtB,GAAI,EAAGpB,MAAO,WAAY8H,WAAW,WAA/C,wIAMJ,cAAC,KAAD,CAAOnG,IAAKqG,GAAWjG,QAAQ,KAAKF,UAAU,eAKlD,cAAC,KAAD,UACE,eAAC,IAAD,CAEEd,EAAE,MACF2G,WAAW,SACXtH,eAAe,SAEfkH,cAAc,cACdK,GAAG,OAPL,UASE,cAAC,KAAD,UACE,eAAC,KAAD,CAAK3G,GAAI,GAAIC,GAAI,EAAGF,EAAG,CAAE6G,GAAI,QAA7B,UACE,eAAC,KAAOC,GAAR,CACE5H,SAAU,CAAEiB,KAAM,MAAOC,GAAI,OAC7BnB,MAAO,WACP8H,WAAW,OAHb,0BAKgB,IACd,cAAC,KAAOC,KAAR,CAAa/H,MAAM,SAAnB,8BAEF,cAAC,KAAO0C,EAAR,CAAUtB,GAAI,EAAGpB,MAAO,WAAY8H,WAAW,WAA/C,4NAQJ,cAAC,KAAD,CAAOnG,IAAKsG,GAAUlG,QAAQ,KAAKF,UAAU,eAKjD,cAAC,KAAD,UACE,eAAC,IAAD,CAEEd,EAAE,MACF2G,WAAW,SACXtH,eAAe,SAEfkH,cAAc,MACdK,GAAG,OAPL,UASE,cAAC,KAAD,UACE,eAAC,KAAD,CAAK3G,GAAI,GAAIC,GAAI,EAAGF,EAAG,CAAE6G,GAAI,QAA7B,UACE,eAAC,KAAOC,GAAR,CACE5H,SAAU,CAAEiB,KAAM,MAAOC,GAAI,OAC7BnB,MAAO,WACP8H,WAAW,OAHb,oBAKU,IACR,cAAC,KAAOC,KAAR,CAAa/H,MAAM,SAAnB,kCAEF,cAAC,KAAO0C,EAAR,CAAUtB,GAAI,EAAGpB,MAAO,WAAY8H,WAAW,WAA/C,iKAOJ,cAAC,KAAD,CAAOnG,IAAKuG,GAAcnG,QAAQ,KAAKF,UAAU,eAGrD,8BACE,cAACqF,GAAD,CAAeiB,IAAKf,EAAOxC,MAAO,CAAEwD,aAAc,QAAlD,SACE,cAAC,GAAD,YCzIKC,GAbC,WAId,OAHAC,qBAAU,WACR9B,OAAO+B,SAAS,EAAG,KAClB,IAED,qCACE,cAAC,GAAD,IACA,uBACA,cAAC,GAAD,Q,mBCZS,OAA0B,qCCA1B,OAA0B,kCCA1B,OAA0B,mCCA1B,OAA0B,gCCA1B,OAA0B,sCCA1B,OAA0B,sCCA1B,OAA0B,oCCA1B,OAA0B,sCCA1B,OAA0B,iCCA1B,OAA0B,oCCA1B,OAA0B,mCCA1B,OAA0B,sCCA1B,OAA0B,wCCA1B,OAA0B,kCCA1B,OAA0B,qCCA1B,OAA0B,sCCA1B,OAA0B,qCCA1B,OAA0B,wCCA1B,OAA0B,kCCA1B,OAA0B,oCCA1B,OAA0B,kCCA1B,OAA0B,oCCA1B,OAA0B,qCCA1B,OAA0B,mCCA1B,OAA0B,qCCA1B,OAA0B,qCCA1B,OAA0B,qCCA1B,OAA0B,mCCA1B,OAA0B,mCCA1B,OAA0B,mCCA1B,OAA0B,0CCA1B,OAA0B,sCCA1B,OAA0B,0CCA1B,OAA0B,oCCA1B,OAA0B,0CCA1B,OAA0B,kCCA1B,OAA0B,kCCA1B,OAA0B,uCCA1B,OAA0B,oCCA1B,OAA0B,sCCA1B,OAA0B,qCCA1B,OAA0B,oCCA1B,OAA0B,uCCA1B,OAA0B,kCCA1B,OAA0B,sCCA1B,OAA0B,iCCA1B,OAA0B,kCCA1B,OAA0B,uCCA1B,OAA0B,iCCA1B,OAA0B,kCCA1B,OAA0B,kCCe1BC,GAbK,yCAAG,WAAOC,GAAP,kBAAArD,EAAA,6DAGjBsD,EAAM,IAAIC,IAAI,mCACdC,OAAS,IAAIC,gBAAgBJ,GAJZ,SAOMpD,KAAMyD,IAAIJ,EAAKD,GAPrB,cAOfM,EAPe,OAQrB7C,QAAQC,IAAI,+BAAgC4C,GARvB,kBASdA,EAAavD,MATC,2CAAH,sD,mGCFL,OAA0B,mC,+BCuW1BwD,GAhVG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACnB/C,QAAQC,IAAI,uBAAwB8C,GAGpC,IAAMC,EAAQC,eAGd,EAAoCrD,mBAAS,IAA7C,oBAAOsD,EAAP,KAAmBC,EAAnB,KAGA,EAAsBvD,mBAASmD,EAAYK,QAA3C,oBAAOC,EAAP,KAAYC,EAAZ,KAGA,EAA4C1D,oBAAS,GAArD,oBAAO2D,EAAP,KAAuBC,EAAvB,KAqBA,OAAIH,EAAM,EAEN,eAAC,KAAD,CAAKnI,GAAG,SAAR,UAEE,cAAC,IAAD,CAAMrB,WAAW,QAAQE,SAAS,OAAlC,0BAGA,cAAC,KAAD,UACE,cAAC,IAAD,CAAMF,WAAW,QAAQE,SAAS,OAAO0H,GAAG,OAA5C,mDAIF,cAAC,IAAD,CAAMvH,eAAe,SAArB,SACG6I,EAAYtE,KAAI,SAACgF,GAEhB,IAAIC,EAAUD,EAAWE,SAASC,gBAAgBC,KAAK,KACvD,OAEE,cADA,CACC,KAAD,CACEC,UAAU,QACVC,QAAS,SAACC,GAAD,OAjCR,SAACA,EAAKP,GACnBzD,QAAQC,IAAI,eAAgB+D,GAC5BhE,QAAQC,IAAI,sBAAuBwD,GAGxB,SAAPO,GACFb,GAAc,SAACD,GAAD,6BAAoBA,GAApB,CAAgCO,OAGhDH,GAAO,SAACD,GAAD,OAASA,EAAM,KACtBrD,QAAQC,IAAIoD,GAuBkBY,CAAOD,EAAKP,IAC9BS,aAAc,CAAC,KAAM,QAHvB,UAME,cAAC,KAAD,CAAMJ,UAAU,OAAhB,SACE,eAAC,KAAD,CACEjJ,EAAE,KACFD,GAAG,OACHuJ,GAAG,WACHC,OAAO,KACPC,QAAQ,KACRC,SAAS,SACTpJ,GAAG,OAPL,UAU2B,IAAxBuI,EAAWc,UACV,cAAC,KAAD,CACEC,MAAM,OACNC,EAAE,QAEFC,IAAI,QACJC,eAAe,SACflJ,IAAKC,GACLkJ,IAAI,SACJjJ,UAAU,UAIZ,cAAC,KAAD,CACE6I,MAAM,OACNC,EAAE,QAEFC,IAAI,QACJC,eAAe,SACflJ,IAAKgI,EAAWc,UAChBK,IAAI,SACJjJ,UAAU,UAId,eAAC,KAAD,CAAKb,GAAI,EAAGC,GAAI,EAAG0J,EAAE,QAArB,UACE,cAAC,KAAOjF,GAAR,CACEzF,SAAS,KACT6H,WAAW,OACX9H,MAAM,QACN6E,UAAU,SAJZ,SAMG8E,EAAWrF,OAGd,cAAC,KAAO5B,EAAR,CACEzC,SAAS,KACTe,GAAI,EACJhB,MAAM,QACN6E,UAAU,SAJZ,SAMG+E,IAEH,eAAC,IAAD,CAAMlC,WAAW,SAAStG,GAAI,EAAGpB,MAAM,WAAvC,UACE,cAAC,KAAD,CAAQuH,KAAM,GAAI9G,GAAI,IADxB,UAEMkJ,EAAWoB,OAFjB,QAGE,eAAC,KAAOrF,GAAR,CAAWzE,GAAI,EAAGhB,SAAS,KAA3B,UACG0J,EAAWqB,aADd,iBAIF,eAAC,IAAD,CAAMtD,WAAW,SAAStG,GAAI,EAAGpB,MAAM,WAAvC,UACE,cAAC,KAAD,CAASuH,KAAM,GAAI9G,GAAG,SADxB,eAG0BwK,GAApBtB,EAAWuB,MACXvB,EAAWuB,MACX,qCAGN,eAAC,IAAD,CAAMxD,WAAW,SAAStG,GAAI,EAAGpB,MAAM,WAAvC,UACE,cAAC,KAAD,CAAQuH,KAAM,GAAI9G,GAAI,IACtB,mBACEE,KAAMgJ,EAAWjB,IACjBhI,OAAO,SACPyK,IAAI,aAHN,mCAWR,cAAC,KAAD,UACE,eAAC,IAAD,CAAM/J,GAAG,OAAT,UACE,cAAC,KAAD,CAASgK,MAAM,UAAU,aAAW,UAApC,SACE,cAAC,KAAD,CACE/K,EAAE,OACFgL,YAAY,MACZ9D,KAAK,KACL+D,QAAQ,OACRC,KAAM,cAACC,GAAA,EAAD,IACN1H,QAAS,kBACPoF,EAAM,CACJuC,MAAO,SACPC,YAAa,6CACbC,OAAQ,QACRC,SAAU,IACVC,YAAY,SAKpB,cAAC,KAAD,CAAST,MAAM,WAAW,aAAW,YAArC,SACE,cAAC,KAAD,CACE/K,EAAE,OACFgL,YAAY,SACZ9D,KAAK,KACL+D,QAAQ,OACRC,KAAM,cAACO,GAAA,EAAD,CAAU9L,MAAM,UACtB8D,QAAS,kBACPoF,EAAM,CACJuC,MAAO,SACPC,YAAa,6CACbC,OAAQ,QACRC,SAAU,IACVC,YAAY,SAKpB,cAAC,KAAD,CAAST,MAAM,OAAO,aAAW,YAAjC,SACE,cAAC,KAAD,CACE/K,EAAE,OACFgL,YAAY,QACZ9D,KAAK,KACL+D,QAAQ,OACRC,KAAM,cAACQ,GAAA,EAAD,IACNjI,QAAS,kBACPoF,EAAM,CACJuC,MAAO,SACPC,YAAa,6CACbC,OAAQ,QACRC,SAAU,IACVC,YAAY,gBAvInBlC,EAAWqC,YAsJb,IAARzC,IAAgC,IAAnBE,EAElB,eAAC,IAAD,CAAMrI,GAAG,SAASE,UAAU,SAASoJ,MAAM,OAA3C,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CACE/C,GAAG,OACH5H,WAAW,QACXE,SAAU,CAAC,OAAQ,OAAQ,QAH7B,8EAQF,qBAAKyK,MAAM,MAAX,SACE,cAAC,KAAD,UACE,cAAC,IAAD,CACEtK,eAAe,SACfL,WAAW,QACXO,QAAQ,UACRH,OAAQ,CAAEG,QAAS,WACnBwD,QAjNU,WACpB4F,GAAkB,IA2MV,gCAWJ,cAAC,KAAD,UACE,cAAC,KAAD,CACE/H,IAAKsK,GACLpK,UAAU,QACVT,GAAG,OACHX,GAAG,OACHsB,QAAQ,aAOU,IAAnB0H,EAEL,eAAC,IAAD,CAAMnI,UAAU,SAASoJ,MAAM,OAAO3K,WAAW,QAAjD,UACyB,IAAtBqJ,EAAWE,OACV,cAAC,KAAD,UACE,cAAC,IAAD,CAAMvJ,WAAW,QAAQqB,GAAG,OAAOnB,SAAS,OAA5C,sGAOA,cAAC,KAAD,UACE,cAAC,IAAD,CAAMF,WAAW,QAAQqB,GAAG,OAAOnB,SAAS,OAA5C,mFAKN,cAAC,KAAD,CAAYiM,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI3K,QAAS,GAA/C,SACG6H,EAAWzE,KAAI,SAACgF,GACf,IAAIC,EAAUD,EAAWE,SAASC,gBAAgBC,KAAK,KACvD,OACE,cAAC,KAAD,CAAMC,UAAU,OAAhB,SACE,eAAC,KAAD,CACEjJ,EAAE,KACFD,GAAG,OACHuJ,GAAG,WACHC,OAAO,KACPC,QAAQ,KACRnJ,GAAG,OANL,UAQE,cAAC,KAAD,CACEO,IAAKgI,EAAWc,UAChBK,IAAI,SACJjJ,UAAU,QACV6I,MAAM,OACNC,EAAE,QACFC,IAAI,QACJC,eAAe,WAEjB,eAAC,KAAD,CAAK7J,GAAI,EAAGC,GAAI,EAAG0J,EAAE,QAArB,UACE,cAAC,KAAOjF,GAAR,CACEzF,SAAS,KACT6H,WAAW,OACX9H,MAAM,QACN6E,UAAU,SAJZ,SAMG8E,EAAWrF,OAGd,cAAC,KAAO5B,EAAR,CACEzC,SAAS,KACTe,GAAI,EACJhB,MAAM,QACN6E,UAAU,SAJZ,SAMG+E,IAGH,eAAC,IAAD,CAAMlC,WAAW,SAAStG,GAAI,EAAGpB,MAAM,WAAvC,UACE,cAAC,KAAD,CAAQuH,KAAM,GAAI9G,GAAI,IADxB,UAEMkJ,EAAWoB,OAFjB,QAGE,eAAC,KAAOrF,GAAR,CAAWzE,GAAI,EAAGhB,SAAS,KAA3B,UACG0J,EAAWqB,aADd,iBAIF,eAAC,IAAD,CAAMtD,WAAW,SAAStG,GAAI,EAAGpB,MAAM,WAAvC,UACE,cAAC,KAAD,CAASuH,KAAM,GAAI9G,GAAG,SADxB,eAG0BwK,GAApBtB,EAAWuB,MACXvB,EAAWuB,MACX,qCAGN,eAAC,IAAD,CAAMxD,WAAW,SAAStG,GAAI,EAAGpB,MAAM,WAAvC,UACE,cAAC,KAAD,CAAQuH,KAAM,GAAI9G,GAAI,IAEtB,mBAAGE,KAAMgJ,EAAWjB,IAAKhI,OAAO,SAASyK,IAAI,aAA7C,kCAvDoBxB,EAAWqC,iBAtB9C,GCjNDG,GAAQ5M,IAAOsI,GAAV,qTA+ZIuE,GA9YG,SAAC,GAAgB,IAAd/M,EAAa,EAAbA,OAEbgN,EAAiB,CACrB,CACE/H,KAAM,WACNgI,MAAOC,IAET,CACEjI,KAAM,QACNgI,MAAOE,IAET,CACElI,KAAM,SACNgI,MAAOG,IAET,CACEnI,KAAM,MACNgI,MAAOI,IAET,CACEpI,KAAM,YACNgI,MAAOK,IAET,CACErI,KAAM,aACNgI,MAAOM,IAET,CACEtI,KAAM,UACNgI,MAAOO,IAET,CACEvI,KAAM,OACNgI,MAAOQ,IAET,CACExI,KAAM,YACNgI,MAAOS,IAET,CACEzI,KAAM,UACNgI,MAAOU,IAET,CACE1I,KAAM,iBACNgI,MAAOW,IAET,CACE3I,KAAM,YACNgI,MAAOY,IAET,CACE5I,KAAM,eACNgI,MAAOa,IAET,CACE7I,KAAM,OACNgI,MAAOc,IAET,CACE9I,KAAM,WACNgI,MAAOe,IAET,CACE/I,KAAM,YACNgI,MAAOgB,IAET,CACEhJ,KAAM,YACNgI,MAAOiB,IAET,CACEjJ,KAAM,cACNgI,MAAOkB,IAET,CACElJ,KAAM,QACNgI,MAAOmB,IAET,CACEnJ,KAAM,UACNgI,MAAOoB,IAET,CACEpJ,KAAM,QACNgI,MAAOqB,IAET,CACErJ,KAAM,UACNgI,MAAOsB,IAET,CACEtJ,KAAM,YACNgI,MAAOuB,IAET,CACEvJ,KAAM,SACNgI,MAAOwB,IAET,CACExJ,KAAM,UACNgI,MAAOyB,IAET,CACEzJ,KAAM,WACNgI,MAAO0B,IAET,CACE1J,KAAM,WACNgI,MAAO2B,IAET,CACE3J,KAAM,SACNgI,MAAO4B,IAET,CACE5J,KAAM,YACNgI,MAAO6B,IAET,CACE7J,KAAM,SACNgI,MAAO8B,IAET,CACE9J,KAAM,SACNgI,MAAO+B,IAET,CACE/J,KAAM,iBACNgI,MAAOgC,IAET,CACEhK,KAAM,YACNgI,MAAOiC,IAET,CACEjK,KAAM,gBACNgI,MAAOkC,IAET,CACElK,KAAM,UACNgI,MAAOmC,IAET,CACEnK,KAAM,iBACNgI,MAAOoC,IAET,CACEpK,KAAM,QACNgI,MAAOqC,IAET,CACErK,KAAM,QACNgI,MAAOsC,IAET,CACEtK,KAAM,aACNgI,MAAOuC,IAET,CACEvK,KAAM,UACNgI,MAAOwC,IAET,CACExK,KAAM,YACNgI,MAAOyC,IAET,CACEzK,KAAM,UACNgI,MAAO0C,IAET,CACE1K,KAAM,cACNgI,MAAO2C,IAET,CACE3K,KAAM,QACNgI,MAAO4C,IAET,CACE5K,KAAM,YACNgI,MAAO6C,IAET,CACE7K,KAAM,OACNgI,MAAO8C,IAET,CACE9K,KAAM,QACNgI,MAAO+C,IAET,CACE/K,KAAM,aACNgI,MAAOgD,IAET,CACEhL,KAAM,aACNgI,MAAOiD,IAET,CACEjL,KAAM,QACNgI,MAAOkD,IAET,CACElL,KAA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","file":"static/js/main.28b8d441.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Landing from \"./components/Landing/Landing\";\r\nimport Room from \"./components/Room/Room\";\r\nimport About from \"./About\";\r\nimport \"./index.css\";\r\nimport { useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nlet socket;\r\nconst PORT = 'http://localhost:5000';\r\n\r\nconst App = () => {\r\n\r\n  // Should only create socket once on app render\r\n  useEffect(() => {\r\n    socket = io(PORT);\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Landing />} />\r\n        <Route exact path=\"/About\" render={() => <About />} />\r\n        <Route exact path=\"/Room\" render={() => <Room socket={socket} />} />\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { Flex, Text } from \"@chakra-ui/layout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"../../index.css\";\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  background-color: black;\r\n  align-items: center;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 3;\r\n`;\r\n\r\n//Renders a navbar\r\nconst Navbar = () => {\r\n  return (\r\n    <Nav>\r\n      <motion.button whileHover={{ scale: 1.1 }}>\r\n        <Link to=\"/\">\r\n          <Text\r\n            fontFamily=\"Widound\"\r\n            color=\"white\"\r\n            fontSize=\"2rem\"\r\n            ml=\"1.5rem\"\r\n            _hover={{ color: \"#ffc108\" }}\r\n          >\r\n            Munchies\r\n          </Text>\r\n        </Link>\r\n      </motion.button>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Link to=\"About\">\r\n          <Button\r\n            m=\"1rem\"\r\n            bgColor=\"white\"\r\n            fontFamily=\"Rubik\"\r\n            _hover={{ bgColor: \"#ffc108\" }}\r\n          >\r\n            About\r\n          </Button>\r\n        </Link>\r\n      </Flex>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { ButtonGroup, Link } from \"@chakra-ui/react\";\r\nimport { FaGithub, FaDev } from \"react-icons/fa\";\r\n\r\n//Github and Devpost link icons\r\nconst SocialIcons = () => {\r\n  return (\r\n    <ButtonGroup variant=\"ghost\" color=\"white\">\r\n      <Link\r\n        mr=\"1rem\"\r\n        target=\"_blank\"\r\n        color=\"white\"\r\n        _hover={{ color: \"#ffc108\" }}\r\n        href=\"https://github.com/brendangubbins/Munchies\"\r\n      >\r\n        <FaGithub fontSize=\"60px\" />\r\n      </Link>\r\n      <Link\r\n        mr=\"1rem\"\r\n        target=\"_blank\"\r\n        color=\"white\"\r\n        _hover={{ color: \"#ffc108\" }}\r\n      >\r\n        <FaDev fontSize=\"60px\" />\r\n      </Link>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nexport default SocialIcons;\r\n","import React from \"react\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\nimport SocialIcons from \"./SocialIcons\";\r\n\r\n//Renders a footer\r\nconst Footer = () => {\r\n  return (\r\n    <Box\r\n      as=\"footer\"\r\n      mx=\"auto\"\r\n      w=\"100%\"\r\n      py=\"12\"\r\n      px={{ base: \"4\", md: \"8\" }}\r\n      bgColor=\"black\"\r\n      mt=\"5rem\"\r\n      bottom=\"0\"\r\n    >\r\n      <Stack>\r\n        <Stack\r\n          direction=\"row\"\r\n          spacing=\"4\"\r\n          align=\"center\"\r\n          justify=\"space-between\"\r\n        >\r\n          <motion.button whileHover={{ scale: 1.1 }}>\r\n            <Link to=\"/\">\r\n              <Text\r\n                color=\"white\"\r\n                fontSize=\"2rem\"\r\n                fontFamily=\"Widound\"\r\n                _hover={{ color: \"#ffc108\" }}\r\n              >\r\n                Munchies\r\n              </Text>\r\n            </Link>\r\n          </motion.button>\r\n          <SocialIcons />\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/munchiesHero.85bb6af0.png\";","import React from \"react\";\r\nimport { Box, Image } from \"@chakra-ui/react\";\r\nimport munchiesHero from \"../../Images/munchiesHero.png\";\r\n\r\nconst Hero = () => {\r\n  //Munchies banner on landing page\r\n  return (\r\n    <Box>\r\n      <Image\r\n        src={munchiesHero}\r\n        draggable=\"false\"\r\n        objectFit=\"cover\"\r\n        boxSize=\"100%\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import styled from 'styled-components';\r\n\r\nconst UserNameInput = styled.input`\r\n  border: none;\r\n  padding: 0.3125rem 5rem;\r\n  padding-left: 2rem;\r\n  border: 2px solid lightgray;\r\n  margin-left: 0.5rem;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    border: 2px solid #666;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst EmailInput = styled.input`\r\n  border: none;\r\n  padding: 0.3125rem 5rem;\r\n  padding-left: 2rem;\r\n  border: 2px solid lightgray;\r\n  margin-left: 0.5rem;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    border: 2px solid #666;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst PasswordInput = styled.input`\r\n  border: none;\r\n  padding: 0.3125rem 5rem;\r\n  padding-left: 2rem;\r\n  border: 2px solid lightgray;\r\n  margin-left: 0.5rem;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    border: 2px solid #666;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport { UserNameInput, EmailInput, PasswordInput };\r\n","import styled from 'styled-components';\r\n\r\n// #ffa500\r\nconst SignUpButton = styled.button`\r\n  cursor: pointer;\r\n  border: none;\r\n  font-family: 'Rubik';\r\n  font-size: 1.0625rem;\r\n  font-weight: bold;\r\n  background-color: ${(props) => (!props.showLogin ? '#ffa500' : '#fff')};\r\n  padding: 0.625rem 1.25rem;\r\n  border-radius: 5px;\r\n  margin-bottom: 2rem;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (!props.showLogin ? '#ffc108' : '#eee')};\r\n  }\r\n`;\r\n\r\nconst LoginButton = styled.button`\r\n  cursor: pointer;\r\n  border: none;\r\n  font-family: 'Rubik';\r\n  font-size: 1.0625rem;\r\n  font-weight: bold;\r\n  background-color: ${(props) => (props.showLogin ? '#ffa500' : '#fff')};\r\n  padding: 0.625rem 1.6rem;\r\n  border-radius: 5px;\r\n  margin-bottom: 2rem;\r\n\r\n  &:hover {\r\n    &:hover {\r\n      background-color: ${(props) => (props.showLogin ? '#ffc108' : '#eee')};\r\n    }\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  cursor: pointer;\r\n  border: none;\r\n  font-family: 'Rubik';\r\n  font-weight: bold;\r\n  background-color: #ffa500;\r\n  padding: 0.975rem 3.125rem;\r\n  margin: 1.875rem auto;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    background-color: #ffc108;\r\n  }\r\n`;\r\n\r\nexport { SignUpButton, LoginButton, SubmitButton };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// error message for invalid login/username info\r\nconst LoginErrorMessage = styled.p`\r\n  margin: 0 auto;\r\n  font-weight: bold;\r\n  color: red;\r\n`;\r\n\r\nconst LoginFormErrMsg = (props) => {\r\n  if (props.LoginErrorMessage === null) {\r\n    return null;\r\n  }\r\n\r\n  return <LoginErrorMessage>{props.errorMessage}</LoginErrorMessage>;\r\n};\r\n\r\nexport default LoginFormErrMsg;\r\n","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { InputGroup, InputLeftElement } from '@chakra-ui/react';\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport { AiFillLock } from 'react-icons/ai';\r\nimport { UserNameInput, PasswordInput } from './FormInputs';\r\nimport { LoginButton, SignUpButton, SubmitButton } from './FormButtons';\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport { useForm } from 'react-hook-form';\r\nimport LoginFormErrMsg from './LoginFormErrMsg';\r\n\r\n// main container for login form\r\nconst LoginFormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`;\r\n\r\n// container for a single input\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n// container for Login and Sign up switch buttons\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\n// error text for invalid inputs\r\nconst ErrorText = styled.p`\r\n  color: red;\r\n  width: 250px;\r\n\r\n  &::before {\r\n    display: inline;\r\n    content: '⚠ ';\r\n  }\r\n`;\r\n\r\nconst LoginForm = ({\r\n  handleLoginClick,\r\n  handleSignUpClick,\r\n  handleLoginSubmit,\r\n  showLogin,\r\n  errorMessage,\r\n}) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ criteriaMode: 'all' });\r\n  return (\r\n    <form onSubmit={handleSubmit(handleLoginSubmit)}>\r\n      <LoginFormContainer>\r\n        <LoginFormErrMsg errorMessage={errorMessage} />\r\n        <ButtonGroup>\r\n          <LoginButton\r\n            type=\"button\"\r\n            onClick={handleLoginClick}\r\n            showLogin={showLogin}\r\n          >\r\n            Login\r\n          </LoginButton>\r\n          <SignUpButton\r\n            type=\"button\"\r\n            onClick={handleSignUpClick}\r\n            showLogin={showLogin}\r\n          >\r\n            Sign up\r\n          </SignUpButton>\r\n        </ButtonGroup>\r\n        <InputGroup>\r\n          <InputContainer>\r\n            <InputLeftElement pointerEvents=\"none\" children={<CgProfile />} />\r\n            <UserNameInput\r\n              placeholder=\"Username\"\r\n              {...register('username', {\r\n                required: 'This input is required',\r\n                minLength: {\r\n                  value: 3,\r\n                  message: 'This input must be at least 3 characters',\r\n                },\r\n              })}\r\n            />\r\n            <ErrorMessage\r\n              errors={errors}\r\n              name=\"username\"\r\n              render={({ messages }) => {\r\n                return messages\r\n                  ? Object.entries(messages).map(([type, message]) => (\r\n                      <ErrorText style={{ textAlign: 'center' }} key={type}>\r\n                        {message}\r\n                      </ErrorText>\r\n                    ))\r\n                  : null;\r\n              }}\r\n            />\r\n          </InputContainer>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputContainer>\r\n            <InputLeftElement pointerEvents=\"none\" children={<AiFillLock />} />\r\n            <PasswordInput\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              {...register('password', {\r\n                required: 'This inpus is required',\r\n              })}\r\n            />\r\n            <ErrorMessage\r\n              errors={errors}\r\n              name=\"username\"\r\n              render={({ messages }) => {\r\n                return messages\r\n                  ? Object.entries(messages).map(([type, message]) => (\r\n                      <ErrorText style={{ textAlign: 'center' }} key={type}>\r\n                        {message}\r\n                      </ErrorText>\r\n                    ))\r\n                  : null;\r\n              }}\r\n            />\r\n          </InputContainer>\r\n        </InputGroup>\r\n\r\n        <SubmitButton>Submit</SubmitButton>\r\n      </LoginFormContainer>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { InputGroup, InputLeftElement } from '@chakra-ui/react';\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport { AiFillLock } from 'react-icons/ai';\r\nimport { MdEmail } from 'react-icons/md';\r\nimport { SignUpButton, LoginButton, SubmitButton } from './FormButtons';\r\nimport { UserNameInput, PasswordInput, EmailInput } from './FormInputs';\r\nimport { useForm } from 'react-hook-form';\r\nimport { ErrorMessage } from '@hookform/error-message';\r\n\r\n// main container for sign up form\r\nconst SignUpFormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`;\r\n\r\n// container for a single input\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 1rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n// container for Login and Sign up switch buttons\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\n// error text for invalid inputs\r\nconst ErrorText = styled.p`\r\n  color: red;\r\n  width: 250px;\r\n\r\n  &::before {\r\n    display: inline;\r\n    content: '⚠ ';\r\n  }\r\n`;\r\n\r\nconst SignUpForm = ({\r\n  handleSignUpClick,\r\n  handleLoginClick,\r\n  handleSignUpSubmit,\r\n  showLogin,\r\n}) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ criteriaMode: 'all' });\r\n  return (\r\n    <form onSubmit={handleSubmit(handleSignUpSubmit)}>\r\n      <SignUpFormContainer>\r\n        <ButtonGroup>\r\n          <LoginButton\r\n            type=\"button\"\r\n            onClick={handleLoginClick}\r\n            showLogin={showLogin}\r\n          >\r\n            Login\r\n          </LoginButton>\r\n          <SignUpButton\r\n            type=\"button\"\r\n            onClick={handleSignUpClick}\r\n            showLogin={showLogin}\r\n          >\r\n            Sign up\r\n          </SignUpButton>\r\n        </ButtonGroup>\r\n        <InputGroup>\r\n          <InputContainer>\r\n            <InputLeftElement pointerEvents=\"none\" children={<CgProfile />} />\r\n            <UserNameInput\r\n              placeholder=\"Username\"\r\n              {...register('username', {\r\n                required: 'This input is required',\r\n                minLength: {\r\n                  value: 3,\r\n                  message: 'Username must be at least 3 characters',\r\n                },\r\n              })}\r\n            />\r\n            <ErrorMessage\r\n              errors={errors}\r\n              name=\"username\"\r\n              render={({ messages }) => {\r\n                return messages\r\n                  ? Object.entries(messages).map(([type, message]) => (\r\n                      <ErrorText style={{ textAlign: 'center' }} key={type}>\r\n                        {message}\r\n                      </ErrorText>\r\n                    ))\r\n                  : null;\r\n              }}\r\n            />\r\n          </InputContainer>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputContainer>\r\n            <InputLeftElement pointerEvents=\"none\" children={<MdEmail />} />\r\n            <EmailInput\r\n              placeholder=\"Email Address\"\r\n              type=\"email\"\r\n              {...register('email', {\r\n                required: 'This input is required',\r\n              })}\r\n            />\r\n            <ErrorMessage\r\n              errors={errors}\r\n              name=\"username\"\r\n              render={({ messages }) => {\r\n                return messages\r\n                  ? Object.entries(messages).map(([type, message]) => (\r\n                      <ErrorText style={{ textAlign: 'center' }} key={type}>\r\n                        {message}\r\n                      </ErrorText>\r\n                    ))\r\n                  : null;\r\n              }}\r\n            />\r\n          </InputContainer>\r\n        </InputGroup>\r\n        <InputGroup>\r\n          <InputContainer>\r\n            <InputLeftElement pointerEvents=\"none\" children={<AiFillLock />} />\r\n            <PasswordInput\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              {...register('password', {\r\n                required: 'This input is required',\r\n                pattern: {\r\n                  value: /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,\r\n                  message:\r\n                    'Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters',\r\n                },\r\n              })}\r\n            />\r\n            <ErrorMessage\r\n              errors={errors}\r\n              name=\"password\"\r\n              render={({ messages }) => {\r\n                return messages\r\n                  ? Object.entries(messages).map(([type, message]) => (\r\n                      <ErrorText style={{ textAlign: 'center' }} key={type}>\r\n                        {message}\r\n                      </ErrorText>\r\n                    ))\r\n                  : null;\r\n              }}\r\n            />\r\n          </InputContainer>\r\n        </InputGroup>\r\n        <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n      </SignUpFormContainer>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import axios from 'axios';\r\nconst baseUrl = 'http://localhost:5000/api/login';\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { login };","import axios from 'axios';\r\nconst baseUrl = 'http://localhost:5000/api/users';\r\n\r\nconst register = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport default { register };","import React from 'react';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport LoginForm from './LoginForm';\r\nimport SignUpForm from './SignUpForm';\r\nimport loginService from '../../../services/login';\r\nimport registerService from '../../../services/register';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LandingFormTitle = styled.h1`\r\n  margin: 1.5rem 0;\r\n  font-family: 'Widound';\r\n  text-align: center;\r\n  font-size: 1.5625rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Form = () => {\r\n  let history = useHistory();\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  // onclick functions to switch rendering between sign up and login form\r\n  const handleLoginClick = () => setShowLogin(true);\r\n  const handleSignUpClick = () => setShowLogin(false);\r\n\r\n  // sends Login form data to backend server\r\n  // if success, receive user login credentials as a response and stores to browser's session storage\r\n  const onLoginSubmit = async (data) => {\r\n    console.log('login data', data);\r\n    const { username, password } = data;\r\n\r\n    try {\r\n      const returnUserData = await loginService.login({\r\n        username,\r\n        password,\r\n      });\r\n\r\n      console.log('returnedUserData', returnUserData);\r\n      if (returnUserData) {\r\n        window.sessionStorage.setItem(\r\n          'loggedMunchiesUser',\r\n          JSON.stringify(returnUserData)\r\n        );\r\n        history.push('/Room');\r\n      }\r\n    } catch (exception) {\r\n      console.log(exception);\r\n      setErrorMessage('Invalid username or password');\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  // sends sign up data to backend server\r\n  const onSignUpSubmit = async (data) => {\r\n    console.log('Sign up data', data);\r\n\r\n    const { username, password, email } = data;\r\n\r\n    await registerService.register({\r\n      username,\r\n      password,\r\n      email,\r\n    });\r\n\r\n    setShowLogin(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LandingFormTitle>\r\n        {showLogin ? (\r\n          <div>\r\n            <h3>Munchies</h3>\r\n            <h3 style={{ fontFamily: 'Rubik' }}>Welcome Back!</h3>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h3>Munchies</h3>\r\n            <h3 style={{ fontFamily: 'Rubik' }}>Create Your Account</h3>\r\n          </div>\r\n        )}\r\n      </LandingFormTitle>\r\n\r\n      {showLogin ? (\r\n        <LoginForm\r\n          handleSignUpClick={handleSignUpClick}\r\n          handleLoginClick={handleLoginClick}\r\n          handleLoginSubmit={onLoginSubmit}\r\n          showLogin={showLogin}\r\n          errorMessage={errorMessage}\r\n        />\r\n      ) : (\r\n        <SignUpForm\r\n          handleSignUpClick={handleSignUpClick}\r\n          handleLoginClick={handleLoginClick}\r\n          handleSignUpSubmit={onSignUpSubmit}\r\n          showLogin={showLogin}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","export default __webpack_public_path__ + \"static/media/locations.40cc51de.svg\";","export default __webpack_public_path__ + \"static/media/rekindle.8266e39f.svg\";","export default __webpack_public_path__ + \"static/media/supportLocal.f49438ac.svg\";","import { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Flex, Center, Box, chakra, Image, Button } from \"@chakra-ui/react\";\r\nimport Form from \"./Form/Form\";\r\nimport locations from \"../../Images/locations.svg\";\r\nimport rekindle from \"../../Images/rekindle.svg\";\r\nimport supportLocal from \"../../Images/supportLocal.svg\";\r\n\r\n// main container for Form\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #f6f6f6;\r\n  width: 30%;\r\n  margin: 0 auto;\r\n  padding: 2rem 1rem;\r\n  border-radius: 5px;\r\n  border: 1px solid #eaeaea;\r\n\r\n  @media only screen and (max-width: 1052px) {\r\n    width: 50%;\r\n  }\r\n\r\n  @media only screen and (max-width: 700px) {\r\n    width: 60%;\r\n    padding: 2rem 3rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 514px) {\r\n    width: 90%;\r\n    padding: 4rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 350px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst LandingForm = () => {\r\n  const myRef = useRef(null);\r\n  const executeScroll = () => myRef.current.scrollIntoView();\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Center>\r\n        <Button\r\n          size=\"lg\"\r\n          bgColor=\"#ffa500\"\r\n          _hover={{ bgColor: \"#ffc108\" }}\r\n          fontFamily=\"Rubik\"\r\n          onClick={executeScroll}\r\n        >\r\n          Login\r\n        </Button>\r\n      </Center>\r\n\r\n      {/* First Card */}\r\n      <Center>\r\n        <Flex\r\n          // bg={\"#F9FAFB\"}\r\n          w=\"40%\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          // ml=\"7rem\"\r\n          flexDirection={[\"column\", \"column\", \"row\", \"row\"]}\r\n          mb=\"2rem\"\r\n        >\r\n          <Box>\r\n            <Box py={10} px={6} w={{ lg: \"100%\" }}>\r\n              <chakra.h2\r\n                fontSize={{ base: \"2xl\", md: \"3xl\" }}\r\n                color={\"gray.800\"}\r\n                fontWeight=\"bold\"\r\n              >\r\n                Familiar cuisines, new{\" \"}\r\n                <chakra.span color=\"orange\">adventures</chakra.span>\r\n              </chakra.h2>\r\n              <chakra.p mt={4} color={\"gray.600\"} fontWeight=\"semibold\">\r\n                Plan your next foodie adventure with your friends and family by\r\n                live messaging and browsing restaurants in your area!\r\n              </chakra.p>\r\n            </Box>\r\n          </Box>\r\n          <Image src={locations} boxSize=\"sm\" draggable=\"false\"></Image>\r\n        </Flex>\r\n      </Center>\r\n\r\n      {/* Second Card */}\r\n      <Center>\r\n        <Flex\r\n          // bg={\"#F9FAFB\"}\r\n          w=\"40%\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          // ml=\"7rem\"\r\n          flexDirection=\"row-reverse\"\r\n          mb=\"2rem\"\r\n        >\r\n          <Box>\r\n            <Box py={10} px={6} w={{ lg: \"100%\" }}>\r\n              <chakra.h2\r\n                fontSize={{ base: \"2xl\", md: \"3xl\" }}\r\n                color={\"gray.800\"}\r\n                fontWeight=\"bold\"\r\n              >\r\n                Rekindle your{\" \"}\r\n                <chakra.span color=\"orange\">relationships</chakra.span>\r\n              </chakra.h2>\r\n              <chakra.p mt={4} color={\"gray.600\"} fontWeight=\"semibold\">\r\n                Finding a spot that suits everyone's tastes can be hard. We're\r\n                here to help do that for you. You and your friends can select\r\n                what foods you like, and we'll show you local spots that you\r\n                both can enjoy.\r\n              </chakra.p>\r\n            </Box>\r\n          </Box>\r\n          <Image src={rekindle} boxSize=\"sm\" draggable=\"false\"></Image>\r\n        </Flex>\r\n      </Center>\r\n\r\n      {/* Third Card */}\r\n      <Center>\r\n        <Flex\r\n          // bg={\"#F9FAFB\"}\r\n          w=\"40%\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          // ml=\"7rem\"\r\n          flexDirection=\"row\"\r\n          mb=\"2rem\"\r\n        >\r\n          <Box>\r\n            <Box py={10} px={6} w={{ lg: \"100%\" }}>\r\n              <chakra.h2\r\n                fontSize={{ base: \"2xl\", md: \"3xl\" }}\r\n                color={\"gray.800\"}\r\n                fontWeight=\"bold\"\r\n              >\r\n                Support{\" \"}\r\n                <chakra.span color=\"orange\">local restaurants</chakra.span>\r\n              </chakra.h2>\r\n              <chakra.p mt={4} color={\"gray.600\"} fontWeight=\"semibold\">\r\n                This past year has been challenging for all of us, including\r\n                local businesses. Munchies is designed to showcase only\r\n                restaurants in your area.\r\n              </chakra.p>\r\n            </Box>\r\n          </Box>\r\n          <Image src={supportLocal} boxSize=\"sm\" draggable=\"false\"></Image>\r\n        </Flex>\r\n      </Center>\r\n      <div>\r\n        <FormContainer ref={myRef} style={{ marginBottom: \"5rem\" }}>\r\n          <Form />\r\n        </FormContainer>\r\n      </div>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default LandingForm;\r\n","import { useEffect } from \"react\";\r\nimport Hero from \"./Hero\";\r\nimport LandingForm from \"./LandingForm\";\r\n\r\nconst Landing = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <br></br>\r\n      <LandingForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","export default __webpack_public_path__ + \"static/media/American.d70a37b5.jpg\";","export default __webpack_public_path__ + \"static/media/Asian.b7e53c8d.jpg\";","export default __webpack_public_path__ + \"static/media/Bakery.bfd6ea74.jpg\";","export default __webpack_public_path__ + \"static/media/BBQ.b2a840a0.jpg\";","export default __webpack_public_path__ + \"static/media/Breakfast.00253162.jpg\";","export default __webpack_public_path__ + \"static/media/BubbleTea.7942fe0d.jpg\";","export default __webpack_public_path__ + \"static/media/Burgers.00da061c.jpg\";","export default __webpack_public_path__ + \"static/media/Caribbean.c6594fce.jpg\";","export default __webpack_public_path__ + \"static/media/Cafe.49e93dba.png\";","export default __webpack_public_path__ + \"static/media/Chinese.32f7b849.jpg\";","export default __webpack_public_path__ + \"static/media/Coffee.08714093.jpg\";","export default __webpack_public_path__ + \"static/media/Columbian.063ba885.jpg\";","export default __webpack_public_path__ + \"static/media/ComfortFood.dc28c04a.jpg\";","export default __webpack_public_path__ + \"static/media/Deli.1f15dc12.jpeg\";","export default __webpack_public_path__ + \"static/media/Desserts.a89823e0.jpg\";","export default __webpack_public_path__ + \"static/media/Dominican.a94e56b3.jpg\";","export default __webpack_public_path__ + \"static/media/FastFood.8dedbddb.jpg\";","export default __webpack_public_path__ + \"static/media/GlutenFree.2b34911a.jpeg\";","export default __webpack_public_path__ + \"static/media/Greek.88173290.jpg\";","export default __webpack_public_path__ + \"static/media/Haitian.63157ce0.jpg\";","export default __webpack_public_path__ + \"static/media/Halal.20c674d3.jpg\";","export default __webpack_public_path__ + \"static/media/Healthy.80c27040.jpg\";","export default __webpack_public_path__ + \"static/media/IceCream.b2fce94e.jpg\";","export default __webpack_public_path__ + \"static/media/Indian.3fc604c8.jpg\";","export default __webpack_public_path__ + \"static/media/Italian.b7097e94.jpeg\";","export default __webpack_public_path__ + \"static/media/Jamacian.ffb5a3dc.jpg\";","export default __webpack_public_path__ + \"static/media/Japanese.5fdd21a3.jpg\";","export default __webpack_public_path__ + \"static/media/Jewish.f333117d.jpg\";","export default __webpack_public_path__ + \"static/media/Korean.a965c568.jpg\";","export default __webpack_public_path__ + \"static/media/Kosher.add69a6e.jpg\";","export default __webpack_public_path__ + \"static/media/LatinAmerican.f5402f38.jpg\";","export default __webpack_public_path__ + \"static/media/Malaysian.510bd4cf.jpg\";","export default __webpack_public_path__ + \"static/media/Mediterranean.4be7222f.jpg\";","export default __webpack_public_path__ + \"static/media/Mexican.239bfcd5.jpg\";","export default __webpack_public_path__ + \"static/media/MiddleEastern.e7019900.jpg\";","export default __webpack_public_path__ + \"static/media/Pizza.9bb0f762.jpg\";","export default __webpack_public_path__ + \"static/media/Ramen.d52f1256.jpg\";","export default __webpack_public_path__ + \"static/media/Sandwiches.9c090dc7.jpg\";","export default __webpack_public_path__ + \"static/media/Seafood.6bf54cc1.jpg\";","export default __webpack_public_path__ + \"static/media/Smoothies.0764e77d.jpg\";","export default __webpack_public_path__ + \"static/media/SoulFood.189f793e.png\";","export default __webpack_public_path__ + \"static/media/Spanish.b3c04f42.jpg\";","export default __webpack_public_path__ + \"static/media/StreetFood.d8146e41.jpg\";","export default __webpack_public_path__ + \"static/media/Sushi.63b018d0.jpg\";","export default __webpack_public_path__ + \"static/media/Taiwanese.a5085d66.jpg\";","export default __webpack_public_path__ + \"static/media/Thai.35ddcf4f.jpg\";","export default __webpack_public_path__ + \"static/media/Vegan.8806981e.jpg\";","export default __webpack_public_path__ + \"static/media/Vegetarian.689efbcd.jpg\";","export default __webpack_public_path__ + \"static/media/Viet.b9f637fa.jpg\";","export default __webpack_public_path__ + \"static/media/Wings.813b7b82.jpg\";","export default __webpack_public_path__ + \"static/media/Wraps.1662931b.jpg\";","import axios from \"axios\";\r\n\r\nconst locationToYelp = async (searchTerms) => {\r\n\r\n\r\n  var url = new URL(\"http://localhost:5000/yelp-get\");\r\n  url.search = new URLSearchParams(searchTerms);\r\n\r\n\r\n  const yelpResponse = await axios.get(url, searchTerms);\r\n  console.log(\"Inside the YelpAPI.js file: \", yelpResponse);\r\n  return yelpResponse.data;\r\n  \r\n};\r\n\r\nexport default locationToYelp;\r\n//There should be a text box, where the user enters a keyword (like \"pizza\" or \"deli\"),\r\n// click a button, and that keyword gets sent to this function to get all nearby restaurants\r\n//locationToYelp(yelpParameters);\r\n","export default __webpack_public_path__ + \"static/media/review.c44b8435.svg\";","import { useState } from \"react\";\r\nimport {\r\n  chakra,\r\n  Flex,\r\n  Text,\r\n  Box,\r\n  Center,\r\n  Image,\r\n  Tooltip,\r\n  IconButton,\r\n  Button,\r\n  SimpleGrid,\r\n} from \"@chakra-ui/react\";\r\nimport munchiesHero from \"../../Images/munchiesHero.png\";\r\nimport \"./roomStyles.css\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport { BiLink, BiMoney, BiStar } from \"react-icons/bi\";\r\nimport { CloseIcon, CheckIcon, StarIcon } from \"@chakra-ui/icons\";\r\nimport review from \"../../Images/review.svg\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport Tilt from \"react-tilt\";\r\n\r\n//Render restaurants as tinder cards\r\nconst FoodCards = ({ yelpAPIData }) => {\r\n  console.log(\"My Yelp API data is \", yelpAPIData);\r\n\r\n  //Toast for button error\r\n  const toast = useToast();\r\n\r\n  //State to hold all the choices the user swiped right on\r\n  const [savedCards, setSavedCards] = useState([]);\r\n\r\n  //State to hold the length of the yelp data\r\n  const [len, setLen] = useState(yelpAPIData.length);\r\n\r\n  //State to render the verdict page - initially false because user needs to exhaust their matches\r\n  const [displayVerdict, setDisplayVerdict] = useState(false);\r\n\r\n  //State to fire when the user is ready for their results\r\n  const handleVerdict = () => {\r\n    setDisplayVerdict(true);\r\n  };\r\n\r\n  //Fire this whenever user swipes on a card\r\n  const swiped = (dir, restaurant) => {\r\n    console.log(\"User swiped \", dir);\r\n    console.log(\"The restaurant was \", restaurant);\r\n    //If the direction is right, we want to save the card\r\n    //Triple equals doesn't work\r\n    if (dir == \"right\") {\r\n      setSavedCards((savedCards) => [...savedCards, restaurant]);\r\n    }\r\n    //Regardless of swipe direction, decrement size of response data\r\n    setLen((len) => len - 1);\r\n    console.log(len);\r\n  };\r\n  // If length is greater than 0, user still has matches they need to swipe on\r\n  if (len > 0) {\r\n    return (\r\n      <Box mt=\"-27rem\">\r\n        {/* <Flex alignItems=\"center\"> */}\r\n        <Text fontFamily=\"Rubik\" fontSize=\"70px\">\r\n          Your Matches\r\n        </Text>\r\n        <Center>\r\n          <Text fontFamily=\"Rubik\" fontSize=\"20px\" mb=\"1rem\">\r\n            Swipe or click to make your choices\r\n          </Text>\r\n        </Center>\r\n        <Flex justifyContent=\"center\">\r\n          {yelpAPIData.map((restaurant) => {\r\n            // address is in the form of an array, join the array together with a space\r\n            let address = restaurant.location.display_address.join(\" \");\r\n            return (\r\n              //returns a Tinder card with the restaurant's image, address, ratings, and Yelp website\r\n              <TinderCard\r\n                className=\"swipe\"\r\n                onSwipe={(dir) => swiped(dir, restaurant)} //trigger this when a user swipes left or right\r\n                preventSwipe={[\"up\", \"down\"]} //user can't swipe up or down\r\n                key={restaurant.id}\r\n              >\r\n                <Tilt className=\"Tilt\">\r\n                  <Box\r\n                    w=\"sm\"\r\n                    mx=\"auto\"\r\n                    bg=\"gray.800\"\r\n                    shadow=\"lg\"\r\n                    rounded=\"lg\"\r\n                    overflow=\"hidden\"\r\n                    mt=\"2rem\"\r\n                  >\r\n                    {/* If the image does not exist, use munchies background as a placeholder */}\r\n                    {restaurant.image_url == \"\" ? (\r\n                      <Image\r\n                        width=\"100%\"\r\n                        h=\"224px\"\r\n                        //h={56}\r\n                        fit=\"cover\"\r\n                        objectPosition=\"center\"\r\n                        src={munchiesHero}\r\n                        alt=\"avatar\"\r\n                        draggable=\"false\"\r\n                      />\r\n                    ) : (\r\n                      //Else use the restaurants image\r\n                      <Image\r\n                        width=\"100%\"\r\n                        h=\"224px\"\r\n                        //h={56}\r\n                        fit=\"cover\"\r\n                        objectPosition=\"center\"\r\n                        src={restaurant.image_url}\r\n                        alt=\"avatar\"\r\n                        draggable=\"false\"\r\n                      />\r\n                    )}\r\n\r\n                    <Box py={4} px={6} h=\"280px\">\r\n                      <chakra.h1\r\n                        fontSize=\"xl\"\r\n                        fontWeight=\"bold\"\r\n                        color=\"white\"\r\n                        textAlign=\"center\"\r\n                      >\r\n                        {restaurant.name}\r\n                      </chakra.h1>\r\n\r\n                      <chakra.p\r\n                        fontSize=\"sm\"\r\n                        py={2}\r\n                        color=\"white\"\r\n                        textAlign=\"center\"\r\n                      >\r\n                        {address}\r\n                      </chakra.p>\r\n                      <Flex alignItems=\"center\" mt={4} color=\"gray.200\">\r\n                        <BiStar size={30} mr={2} />\r\n                        {`${restaurant.rating}/5 -`}\r\n                        <chakra.h1 px={2} fontSize=\"md\">\r\n                          {restaurant.review_count} Ratings\r\n                        </chakra.h1>\r\n                      </Flex>\r\n                      <Flex alignItems=\"center\" mt={4} color=\"gray.200\">\r\n                        <BiMoney size={30} mr=\"1rem\" />\r\n                        {/* If money is undefined, say it's unavailable, else render the price */}\r\n                        {`${restaurant.price != undefined\r\n                          ? restaurant.price\r\n                          : \"Price unavailable 😔\"\r\n                          }`}\r\n                      </Flex>\r\n                      <Flex alignItems=\"center\" mt={4} color=\"gray.200\">\r\n                        <BiLink size={30} mr={2} />\r\n                        <a\r\n                          href={restaurant.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          Learn More\r\n                        </a>\r\n                      </Flex>\r\n                    </Box>\r\n                  </Box>\r\n                </Tilt>\r\n                <Center>\r\n                  <Flex mt=\"2rem\">\r\n                    <Tooltip label=\"Dislike\" aria-label=\"tooltip\">\r\n                      <IconButton\r\n                        m=\"1rem\"\r\n                        colorScheme=\"red\"\r\n                        size=\"lg\"\r\n                        isRound=\"true\"\r\n                        icon={<CloseIcon />}\r\n                        onClick={() =>\r\n                          toast({\r\n                            title: \"Oh no!\",\r\n                            description: \"This feature doesn't work yet 😔\",\r\n                            status: \"error\",\r\n                            duration: 4000,\r\n                            isClosable: true,\r\n                          })\r\n                        }\r\n                      />\r\n                    </Tooltip>\r\n                    <Tooltip label=\"Favorite\" aria-label=\"A tooltip\">\r\n                      <IconButton\r\n                        m=\"1rem\"\r\n                        colorScheme=\"yellow\"\r\n                        size=\"lg\"\r\n                        isRound=\"true\"\r\n                        icon={<StarIcon color=\"white\" />}\r\n                        onClick={() =>\r\n                          toast({\r\n                            title: \"Oh no!\",\r\n                            description: \"This feature doesn't work yet 😔\",\r\n                            status: \"error\",\r\n                            duration: 4000,\r\n                            isClosable: true,\r\n                          })\r\n                        }\r\n                      />\r\n                    </Tooltip>\r\n                    <Tooltip label=\"Like\" aria-label=\"A tooltip\">\r\n                      <IconButton\r\n                        m=\"1rem\"\r\n                        colorScheme=\"green\"\r\n                        size=\"lg\"\r\n                        isRound=\"true\"\r\n                        icon={<CheckIcon />}\r\n                        onClick={() =>\r\n                          toast({\r\n                            title: \"Oh no!\",\r\n                            description: \"This feature doesn't work yet 😔\",\r\n                            status: \"error\",\r\n                            duration: 4000,\r\n                            isClosable: true,\r\n                          })\r\n                        }\r\n                      />\r\n                    </Tooltip>\r\n                  </Flex>\r\n                </Center>\r\n              </TinderCard>\r\n            );\r\n          })}\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  }\r\n  //User ran out of matches - tell them\r\n  else if (len === 0 && displayVerdict === false) {\r\n    return (\r\n      <Flex mt=\"-20rem\" direction=\"column\" width=\"100%\">\r\n        <Center>\r\n          <Text\r\n            mb=\"3rem\"\r\n            fontFamily=\"Rubik\"\r\n            fontSize={[\"15px\", \"10px\", \"30px\"]}\r\n          >\r\n            You're out of matches. Ready to see your results? 👀\r\n          </Text>\r\n        </Center>\r\n        <div width=\"20%\">\r\n          <Center>\r\n            <Button\r\n              justifyContent=\"center\"\r\n              fontFamily=\"Rubik\"\r\n              bgColor=\"#ffa500\"\r\n              _hover={{ bgColor: \"#ffc108\" }}\r\n              onClick={handleVerdict}\r\n            >\r\n              Reveal Matches\r\n            </Button>\r\n          </Center>\r\n        </div>\r\n        <Center>\r\n          <Image\r\n            src={review}\r\n            draggable=\"false\"\r\n            mt=\"2rem\"\r\n            mr=\"2rem\"\r\n            boxSize=\"sm\"\r\n          />\r\n        </Center>\r\n      </Flex>\r\n    );\r\n  }\r\n  //Once user is ready to see their verdict, render their matched cards\r\n  else if (displayVerdict === true) {\r\n    return (\r\n      <Flex direction=\"column\" width=\"100%\" fontFamily=\"Rubik\">\r\n        {savedCards.length !== 0 ? (\r\n          <Center>\r\n            <Text fontFamily=\"Rubik\" mt=\"2rem\" fontSize=\"20px\">\r\n              Based on your matches, you should support these restaurants in your\r\n              area! 😍\r\n            </Text>\r\n          </Center>)\r\n          :\r\n          (\r\n            <Center>\r\n              <Text fontFamily=\"Rubik\" mt=\"2rem\" fontSize=\"20px\">\r\n                It seems like you didn't enjoy any of the restaurants. ☹️\r\n              </Text>\r\n            </Center>\r\n          )}\r\n        <SimpleGrid columns={[1, 1, 1, 1, 2]} spacing={10}>\r\n          {savedCards.map((restaurant) => {\r\n            let address = restaurant.location.display_address.join(\" \");\r\n            return (\r\n              <Tilt className=\"Tilt\" key={restaurant.id}>\r\n                <Box\r\n                  w=\"sm\"\r\n                  mx=\"auto\"\r\n                  bg=\"gray.800\"\r\n                  shadow=\"lg\"\r\n                  rounded=\"lg\"\r\n                  mt=\"3rem\"\r\n                >\r\n                  <Image\r\n                    src={restaurant.image_url}\r\n                    alt=\"avatar\"\r\n                    draggable=\"false\"\r\n                    width=\"100%\"\r\n                    h=\"224px\"\r\n                    fit=\"cover\"\r\n                    objectPosition=\"center\"\r\n                  />\r\n                  <Box py={4} px={6} h=\"280px\">\r\n                    <chakra.h1\r\n                      fontSize=\"xl\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"white\"\r\n                      textAlign=\"center\"\r\n                    >\r\n                      {restaurant.name}\r\n                    </chakra.h1>\r\n\r\n                    <chakra.p\r\n                      fontSize=\"sm\"\r\n                      py={2}\r\n                      color=\"white\"\r\n                      textAlign=\"center\"\r\n                    >\r\n                      {address}\r\n                    </chakra.p>\r\n\r\n                    <Flex alignItems=\"center\" mt={4} color=\"gray.200\">\r\n                      <BiStar size={30} mr={2} />\r\n                      {`${restaurant.rating}/5 -`}\r\n                      <chakra.h1 px={2} fontSize=\"md\">\r\n                        {restaurant.review_count} Ratings\r\n                      </chakra.h1>\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\" mt={4} color=\"gray.200\">\r\n                      <BiMoney size={30} mr=\"1rem\" />\r\n\r\n                      {`${restaurant.price != undefined\r\n                        ? restaurant.price\r\n                        : \"Price unavailable 😔\"\r\n                        }`}\r\n                    </Flex>\r\n                    <Flex alignItems=\"center\" mt={4} color=\"gray.200\">\r\n                      <BiLink size={30} mr={2} />\r\n\r\n                      <a href={restaurant.url} target=\"_blank\" rel=\"noreferrer\">\r\n                        Learn More\r\n                      </a>\r\n                    </Flex>\r\n                  </Box>\r\n                </Box>\r\n              </Tilt>\r\n            );\r\n          })}\r\n        </SimpleGrid>\r\n      </Flex>\r\n    );\r\n  }\r\n};\r\n\r\nexport default FoodCards;\r\n","import { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, Center, Flex, Box, Text, Avatar } from '@chakra-ui/react';\r\nimport { motion } from 'framer-motion';\r\nimport American from '../../foodImages/American.jpg';\r\nimport Asian from '../../foodImages/Asian.jpg';\r\nimport Bakery from '../../foodImages/Bakery.jpg';\r\nimport BBQ from '../../foodImages/BBQ.jpg';\r\nimport Breakfast from '../../foodImages/Breakfast.jpg';\r\nimport BubbleTea from '../../foodImages/BubbleTea.jpg';\r\nimport Burgers from '../../foodImages/Burgers.jpg';\r\nimport Carribean from '../../foodImages/Caribbean.jpg';\r\nimport Cafe from '../../foodImages/Cafe.png';\r\nimport Chinese from '../../foodImages/Chinese.jpg';\r\nimport Coffee from '../../foodImages/Coffee.jpg';\r\nimport Columbian from '../../foodImages/Columbian.jpg';\r\nimport ComfortFood from '../../foodImages/ComfortFood.jpg';\r\nimport Deli from '../../foodImages/Deli.jpeg';\r\nimport Desserts from '../../foodImages/Desserts.jpg';\r\nimport Dominican from '../../foodImages/Dominican.jpg';\r\nimport FastFood from '../../foodImages/FastFood.jpg';\r\nimport GlutenFree from '../../foodImages/GlutenFree.jpeg';\r\nimport Greek from '../../foodImages/Greek.jpg';\r\nimport Haitian from '../../foodImages/Haitian.jpg';\r\nimport Halal from '../../foodImages/Halal.jpg';\r\nimport Healthy from '../../foodImages/Healthy.jpg';\r\nimport IceCream from '../../foodImages/IceCream.jpg';\r\nimport Indian from '../../foodImages/Indian.jpg';\r\nimport Italian from '../../foodImages/Italian.jpeg';\r\nimport Jamacian from '../../foodImages/Jamacian.jpg';\r\nimport Japanese from '../../foodImages/Japanese.jpg';\r\nimport Jewish from '../../foodImages/Jewish.jpg';\r\nimport Korean from '../../foodImages/Korean.jpg';\r\nimport Kosher from '../../foodImages/Kosher.jpg';\r\nimport LatinAmerican from '../../foodImages/LatinAmerican.jpg';\r\nimport Malaysian from '../../foodImages/Malaysian.jpg';\r\nimport Mediterranean from '../../foodImages/Mediterranean.jpg';\r\nimport Mexican from '../../foodImages/Mexican.jpg';\r\nimport MiddleEastern from '../../foodImages/MiddleEastern.jpg';\r\nimport Pizza from '../../foodImages/Pizza.jpg';\r\nimport Ramen from '../../foodImages/Ramen.jpg';\r\nimport Sandwiches from '../../foodImages/Sandwiches.jpg';\r\nimport Seafood from '../../foodImages/Seafood.jpg';\r\nimport Smoothies from '../../foodImages/Smoothies.jpg';\r\nimport SoulFood from '../../foodImages/SoulFood.png';\r\nimport Spanish from '../../foodImages/Spanish.jpg';\r\nimport StreetFood from '../../foodImages/StreetFood.jpg';\r\nimport Sushi from '../../foodImages/Sushi.jpg';\r\nimport Taiwanese from '../../foodImages/Taiwanese.jpg';\r\nimport Thai from '../../foodImages/Thai.jpg';\r\nimport Vegan from '../../foodImages/Vegan.jpg';\r\nimport Vegetarian from '../../foodImages/Vegetarian.jpg';\r\nimport Viet from '../../foodImages/Viet.jpg';\r\nimport Wings from '../../foodImages/Wings.jpg';\r\nimport Wraps from '../../foodImages/Wraps.jpg';\r\nimport locationToYelp from './YelpAPI';\r\nimport FoodCards from './FoodCards';\r\n\r\nconst Title = styled.h2`\r\n  font-family: 'Rubik';\r\n  font-size: 3rem;\r\n  text-align: center;\r\n  margin-bottom: 1rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    font-size: 2.2rem;\r\n    margin: 0;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 1.7rem;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst Selection = ({ socket }) => {\r\n  //All images for the cuisine buttons\r\n  const foodCategories = [\r\n    {\r\n      name: 'American',\r\n      image: American,\r\n    },\r\n    {\r\n      name: 'Asian',\r\n      image: Asian,\r\n    },\r\n    {\r\n      name: 'Bakery',\r\n      image: Bakery,\r\n    },\r\n    {\r\n      name: 'BBQ',\r\n      image: BBQ,\r\n    },\r\n    {\r\n      name: 'Breakfast',\r\n      image: Breakfast,\r\n    },\r\n    {\r\n      name: 'Bubble Tea',\r\n      image: BubbleTea,\r\n    },\r\n    {\r\n      name: 'Burgers',\r\n      image: Burgers,\r\n    },\r\n    {\r\n      name: 'Cafe',\r\n      image: Cafe,\r\n    },\r\n    {\r\n      name: 'Caribbean',\r\n      image: Carribean,\r\n    },\r\n    {\r\n      name: 'Chinese',\r\n      image: Chinese,\r\n    },\r\n    {\r\n      name: 'Coffee and Tea',\r\n      image: Coffee,\r\n    },\r\n    {\r\n      name: 'Colombian',\r\n      image: Columbian,\r\n    },\r\n    {\r\n      name: 'Comfort Food',\r\n      image: ComfortFood,\r\n    },\r\n    {\r\n      name: 'Deli',\r\n      image: Deli,\r\n    },\r\n    {\r\n      name: 'Desserts',\r\n      image: Desserts,\r\n    },\r\n    {\r\n      name: 'Dominican',\r\n      image: Dominican,\r\n    },\r\n    {\r\n      name: 'Fast Food',\r\n      image: FastFood,\r\n    },\r\n    {\r\n      name: 'Gluten Free',\r\n      image: GlutenFree,\r\n    },\r\n    {\r\n      name: 'Greek',\r\n      image: Greek,\r\n    },\r\n    {\r\n      name: 'Haitian',\r\n      image: Haitian,\r\n    },\r\n    {\r\n      name: 'Halal',\r\n      image: Halal,\r\n    },\r\n    {\r\n      name: 'Healthy',\r\n      image: Healthy,\r\n    },\r\n    {\r\n      name: 'Ice Cream',\r\n      image: IceCream,\r\n    },\r\n    {\r\n      name: 'Indian',\r\n      image: Indian,\r\n    },\r\n    {\r\n      name: 'Italian',\r\n      image: Italian,\r\n    },\r\n    {\r\n      name: 'Jamaican',\r\n      image: Jamacian,\r\n    },\r\n    {\r\n      name: 'Japanese',\r\n      image: Japanese,\r\n    },\r\n    {\r\n      name: 'Jewish',\r\n      image: Jewish,\r\n    },\r\n    {\r\n      name: 'Smoothies',\r\n      image: Smoothies,\r\n    },\r\n    {\r\n      name: 'Korean',\r\n      image: Korean,\r\n    },\r\n    {\r\n      name: 'Kosher',\r\n      image: Kosher,\r\n    },\r\n    {\r\n      name: 'Latin American',\r\n      image: LatinAmerican,\r\n    },\r\n    {\r\n      name: 'Malaysian',\r\n      image: Malaysian,\r\n    },\r\n    {\r\n      name: 'Mediterranean',\r\n      image: Mediterranean,\r\n    },\r\n    {\r\n      name: 'Mexican',\r\n      image: Mexican,\r\n    },\r\n    {\r\n      name: 'Middle Eastern',\r\n      image: MiddleEastern,\r\n    },\r\n    {\r\n      name: 'Pizza',\r\n      image: Pizza,\r\n    },\r\n    {\r\n      name: 'Ramen',\r\n      image: Ramen,\r\n    },\r\n    {\r\n      name: 'Sandwiches',\r\n      image: Sandwiches,\r\n    },\r\n    {\r\n      name: 'Seafood',\r\n      image: Seafood,\r\n    },\r\n    {\r\n      name: 'Soul Food',\r\n      image: SoulFood,\r\n    },\r\n    {\r\n      name: 'Spanish',\r\n      image: Spanish,\r\n    },\r\n    {\r\n      name: 'Street Food',\r\n      image: StreetFood,\r\n    },\r\n    {\r\n      name: 'Sushi',\r\n      image: Sushi,\r\n    },\r\n    {\r\n      name: 'Taiwanese',\r\n      image: Taiwanese,\r\n    },\r\n    {\r\n      name: 'Thai',\r\n      image: Thai,\r\n    },\r\n    {\r\n      name: 'Vegan',\r\n      image: Vegan,\r\n    },\r\n    {\r\n      name: 'Vegetarian',\r\n      image: Vegetarian,\r\n    },\r\n    {\r\n      name: 'Vietnamese',\r\n      image: Viet,\r\n    },\r\n    {\r\n      name: 'Wings',\r\n      image: Wings,\r\n    },\r\n    {\r\n      name: 'Wraps',\r\n      image: Wraps,\r\n    },\r\n  ];\r\n\r\n  const getLocation = new Promise((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n  });\r\n\r\n  const username = JSON.parse(\r\n    window.sessionStorage.getItem('loggedMunchiesUser')\r\n  ).username;\r\n\r\n  // State to hold what cuisine the user selects\r\n  const [cuisineData, setCuisineData] = useState([]);\r\n\r\n  // State to hold what cuisine the room guest selects\r\n  const [guestData, setGuestData] = useState([]);\r\n\r\n  // State to hold both users preferences combined\r\n  // const [finalData, setFinalData] = useState([]);\r\n\r\n  // State to hold Yelp API Data response\r\n  const [yelpAPIData, setYelpAPIData] = useState([]);\r\n\r\n  // State to track \"ready\" status from socket.io\r\n  const [ready, setReady] = useState(false);\r\n  const [guestReady, setGuestReady] = useState(false);\r\n\r\n  // State to hold user locations\r\n  const [location, setLocation] = useState('');\r\n  const [guestLocation, setGuestLocation] = useState('');\r\n\r\n  // useEffect hook to retrieve Yelp API data upon user ready\r\n  useEffect(() => {\r\n    async function callYelp() {\r\n      //setFinalData([...cuisineData, ...guestData]);\r\n      console.log(`Terms: ${[...cuisineData, ...guestData]}`);\r\n      console.log(`Location: ${location}`);\r\n      console.log(`Guest Location: ${guestLocation}`);\r\n\r\n      // Taking the average latitude and longitude between the user and guest\r\n      const midpointLatitude = (location[0] + guestLocation[0]) / 2;\r\n      const midpointLongitude = (location[1] + guestLocation[1]) / 2;\r\n\r\n      const parameters = {\r\n        latitude: midpointLatitude,\r\n        longitude: midpointLongitude,\r\n        term: [...cuisineData, ...guestData, \"restaurant\"],\r\n      };\r\n\r\n      console.log(`Search terms: ${parameters}`);\r\n\r\n      const response = await locationToYelp(parameters);\r\n      setYelpAPIData(response);\r\n    }\r\n\r\n    // Only if both users are ready, then make the API call\r\n    if (ready && guestReady) {\r\n      callYelp();\r\n    }\r\n  }, [ready, guestReady]);\r\n\r\n  // Fire this whenever a user clicks on a cuisine button\r\n  const handleClick = ({ food }) => {\r\n    // If we don't have this food, add it to the state\r\n    if (!cuisineData.includes(food.name)) {\r\n      setCuisineData(cuisineData.concat(food.name));\r\n      console.log(\"We're adding more food: \", cuisineData);\r\n    }\r\n    // Else user clicked again, remove the food from the state\r\n    else {\r\n      const arr = cuisineData.filter((item) => {\r\n        return item !== food.name;\r\n      });\r\n      setCuisineData(arr);\r\n      console.log('Removing food', cuisineData);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    // const obj = { location: \"New York\", term: cuisineData };\r\n    // let res = await locationToYelp(obj);\r\n    // setYelpAPIData(res);\r\n\r\n    const data = [...cuisineData];\r\n\r\n    const locationFromBrowser = await getLocation;\r\n    const lat = locationFromBrowser.coords.latitude;\r\n    const lon = locationFromBrowser.coords.longitude;\r\n\r\n    // dummy coordinates of Time Square\r\n    // const lat = 40.758;\r\n    // const lon = -73.9855;\r\n\r\n    const latlon = [lat, lon];\r\n\r\n    setLocation(latlon);\r\n    setReady(true);\r\n\r\n    socket.emit('submit-ready', data, username, latlon);\r\n  };\r\n\r\n  socket.on('user-ready', (data, sender, guestLocation) => {\r\n    if (username !== sender) {\r\n      setGuestData(data);\r\n      setGuestLocation(guestLocation);\r\n      setGuestReady(true);\r\n    }\r\n  });\r\n\r\n  //Render the food buttons for the user to pick\r\n  if (!(ready && guestReady)) {\r\n    return (\r\n      <Flex direction=\"column\">\r\n        <Title>Select your favorite cuisines 😋</Title>\r\n        <Center>\r\n          <Box>\r\n            <Center>\r\n              <Flex>\r\n                <Center>\r\n                  {cuisineData.length >= 1 ? (\r\n                    <motion.div\r\n                      initial={{ scale: 0 }}\r\n                      animate={{ rotate: 360, scale: 1 }}\r\n                      transition={{\r\n                        type: 'spring',\r\n                        stiffness: 260,\r\n                        damping: 20,\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        size=\"lg\"\r\n                        bgColor=\"#ffa500\"\r\n                        _hover={{ backgroundColor: '#ffc108' }}\r\n                        fontFamily=\"Rubik\"\r\n                        onClick={handleSubmit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </motion.div>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </Center>\r\n              </Flex>\r\n            </Center>\r\n            <Flex width=\"100%\">\r\n              <Text mt=\"2rem\" ml=\"1rem\" fontFamily=\"Rubik\" fontSize=\"xl\">\r\n                Categories\r\n              </Text>\r\n            </Flex>\r\n            <Center>\r\n              <Flex direction=\"row\" flexWrap=\"wrap\" w=\"100%\">\r\n                {foodCategories.map((food) => {\r\n                  return (\r\n                    <Button\r\n                      key={food.name}\r\n                      variant=\"solid\"\r\n                      margin=\".5rem\"\r\n                      onClick={() => handleClick({ food })}\r\n                    >\r\n                      <Avatar\r\n                        src={food.image}\r\n                        size=\"sm\"\r\n                        justifyContent=\"flex-start\"\r\n                        mr=\".5rem\"\r\n                      />\r\n                      {food.name}\r\n                      {/* If the user clicked on the button, add a checkmark to show it went through */}\r\n                      {cuisineData.includes(food.name) ? '✔️' : ' '}\r\n                    </Button>\r\n                  );\r\n                })}\r\n              </Flex>\r\n            </Center>\r\n          </Box>\r\n        </Center>\r\n      </Flex>\r\n    );\r\n  } else {\r\n    //Once we have the yelp response, render the cards\r\n    return (\r\n      <Flex justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n        {yelpAPIData.length === 0 ? (\r\n          <p>Currently Loading</p>\r\n        ) : (\r\n          <FoodCards yelpAPIData={yelpAPIData} />\r\n        )}\r\n      </Flex>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Selection;\r\n","import styled from 'styled-components';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// main container for chat section\r\nconst OuterBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n/* ROOM COMPONENTS */\r\n// Room number heading\r\nconst RoomNumber = styled.h3`\r\n  font-family: 'Rubik'\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  margin-bottom: 2rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\n// container for room input and room button\r\nconst EnterRoomContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst RoomButton = styled.button`\r\n  padding: 0.5rem;\r\n  background: #ffa500;\r\n  color: black;\r\n  font-family: 'Rubik';\r\n\r\n  &:hover {\r\n    background-color: #ffc100;\r\n  }\r\n`;\r\n\r\nconst RoomInput = styled.input`\r\n  border: 2px lightgray solid;\r\n  padding: 0 1rem;\r\n`;\r\n\r\n/* CHAT COMPONENTS */\r\n// main container for chat room\r\nconst ChatContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  background: #f6f6f6;\r\n  border: 1px solid #fffafa;\r\n  border-radius: 25px;\r\n  height: 800px;\r\n  width: 100%;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  box-sizing: border-box;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\n// container for all messages\r\nconst MessagesContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n`;\r\n\r\n// user's message container\r\nconst UserMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  margin-right: 0.6rem;\r\n`;\r\n\r\n// guest's message container\r\nconst GuestMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-left: 0.2rem;\r\n`;\r\n\r\n// container for both name and message\r\nconst NameAndMsgContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\n// single message component\r\n// #ffa500\r\nconst Message = styled.div`\r\n  display: inline-block;\r\n  font-size: 0.9rem;\r\n  border-radius: 20px;\r\n  max-width: 200px;\r\n  background: ${(props) => (props.guest ? '#404040' : '#ffa500')};\r\n  color: ${(props) => (props.guest ? 'white' : 'black')};\r\n  padding: 0.2rem 2rem;\r\n  margin: 0.3rem 0;\r\n  margin-top: 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    font-size: 1rem;\r\n    padding: 0.2rem 1rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 0.8rem;\r\n    padding: 0.2rem 1rem;\r\n    max-width: 150px;\r\n  }\r\n`;\r\n\r\n// user/guest name\r\nconst Name = styled.p`\r\n  font-weight: bolder;\r\n  font-family: rubik;\r\n  text-align: left;\r\n`;\r\n\r\n/* BOTTOM CHAT ROOM SECTION */\r\n// Form component for sending messages\r\nconst MessageForm = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 1rem;\r\n  border-top: solid 1px #c4c4c4;\r\n  padding: 0.5rem;\r\n  padding-top: 1.5rem;\r\n`;\r\n\r\n// input component for entering messages\r\nconst MessageInput = styled.input`\r\n  padding: 1rem;\r\n  margin-right: 1rem;\r\n  width: 80%;\r\n  border-radius: 20px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n// button to submit message to backend\r\nconst SendButton = styled.button`\r\n  background: #ffa500;\r\n  padding: 0.7rem;\r\n  border-radius: 100px;\r\n  font-weight: bold;\r\n\r\n  &:hover {\r\n    background-color: #ffc108;\r\n  }\r\n`;\r\n\r\nconst Chat = ({ socket }) => {\r\n  const username = JSON.parse(\r\n    window.sessionStorage.getItem('loggedMunchiesUser')\r\n  ).username;\r\n\r\n  // State for storing every message sent during application use\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  // State for current message being typed or to be sent\r\n  const [message, setMessage] = useState('');\r\n\r\n  // State for storing active room number\r\n  const [room, setRoom] = useState(username);\r\n\r\n  // State for storing current user\r\n  const [name, setName] = useState(username);\r\n\r\n  // State for storing second user in the room\r\n  const [guestName, setGuestName] = useState('');\r\n\r\n  /* \r\n  useEffect hook to store incoming messages into state\r\n  and differentiate between user and guest messages\r\n  */\r\n  useEffect(() => {\r\n    socket.on('receive-message', (data) => {\r\n      const messageObj = {\r\n        message: data.message,\r\n        userGuest: true,\r\n      };\r\n\r\n      if (data.username !== username) {\r\n        setGuestName(data.username);\r\n        setMessages(messages.concat(messageObj));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receive-message');\r\n    };\r\n  }, [messages]);\r\n\r\n  socket.on('connect', () => {\r\n    console.log(`Connecting ${socket.id}`);\r\n  });\r\n\r\n  // function to control message input state changes\r\n  const handleMessageText = (e) => {\r\n    // console.log(e.target.value)\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  // function to handle a user joining a room\r\n  const handleRoomJoin = () => {\r\n    console.log('Room: ', room);\r\n    socket.emit('join-room', room, (message) => {\r\n      console.log(message);\r\n    });\r\n  };\r\n\r\n  // function to control room input state changes\r\n  const handleRoomText = (e) => {\r\n    // console.log(e.target.value)\r\n    setRoom(e.target.value);\r\n  };\r\n\r\n  // function to handle sending messages with socket.io\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    const messageObj = {\r\n      message: message,\r\n      userGuest: false,\r\n    };\r\n    setMessages(messages.concat(messageObj));\r\n\r\n    socket.emit('send-message', message, room, username);\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <OuterBox>\r\n      <RoomNumber>Room Code: {name}</RoomNumber>\r\n      <EnterRoomContainer>\r\n        <RoomInput\r\n          placeholder=\"Room code\"\r\n          value={room}\r\n          onChange={handleRoomText}\r\n        />\r\n        <RoomButton onClick={handleRoomJoin}>Enter</RoomButton>\r\n      </EnterRoomContainer>\r\n      <ChatContainer>\r\n        <MessagesContainer>\r\n          {messages.map((msg, index) => {\r\n            /* dynamically render guest messages */\r\n            if (msg.userGuest) {\r\n              return (\r\n                <GuestMessage guest={msg.userGuest} key={index}>\r\n                  <NameAndMsgContainer>\r\n                    <Name>{guestName}</Name>\r\n                    <Message guest={msg.userGuest}>{msg.message}</Message>\r\n                  </NameAndMsgContainer>\r\n                </GuestMessage>\r\n              );\r\n            }\r\n\r\n            /* dynamically render user messages */\r\n            return (\r\n              <UserMessage guest={msg.userGuest} key={index}>\r\n                <NameAndMsgContainer>\r\n                  <Name>{name}</Name>\r\n                  <Message guest={msg.userGuest}>{msg.message}</Message>\r\n                </NameAndMsgContainer>\r\n              </UserMessage>\r\n            );\r\n          })}\r\n        </MessagesContainer>\r\n        <MessageForm>\r\n          <MessageInput\r\n            placeholder=\"Send a message\"\r\n            value={message}\r\n            onChange={handleMessageText}\r\n          />\r\n          <SendButton type=\"submit\" onClick={handleSendMessage}>\r\n            Submit\r\n          </SendButton>\r\n        </MessageForm>\r\n      </ChatContainer>\r\n    </OuterBox>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Selection from './Selection';\r\nimport Chat from './Chat';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  overflow: auto;\r\n`;\r\n\r\nconst LeftAlign = styled.section`\r\n  display: flex;\r\n  background-color: #ffffff;\r\n\r\n  color: black;\r\n  width: 70%;\r\n  flex-direction: column;\r\n  border-right: 2px solid lightgray;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst RightAlign = styled.section`\r\n  display: flex;\r\n  width: 100%;\r\n  background-color: #ffffff;\r\n  color: black;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 2rem;\r\n`;\r\nconst Room = ({ socket }) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n\r\n    // On render, automatically place the user in their room\r\n\r\n    const username = JSON.parse(\r\n      window.sessionStorage.getItem(\"loggedMunchiesUser\")\r\n    ).username;\r\n\r\n    socket.emit('join-room', username, (message) => {\r\n      console.log(message);\r\n    });\r\n  }, []);\r\n  return (\r\n    <Wrapper>\r\n      <LeftAlign>\r\n        <Chat socket={socket} />\r\n      </LeftAlign>\r\n      <RightAlign>\r\n        <Selection socket={socket} />\r\n      </RightAlign>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","export default __webpack_public_path__ + \"static/media/react.4e0c9700.svg\";","export default __webpack_public_path__ + \"static/media/StyledComponents.e35c7793.png\";","export default __webpack_public_path__ + \"static/media/Chakra.22937fcd.jpg\";","export default __webpack_public_path__ + \"static/media/nodejs.8629b14e.svg\";","export default __webpack_public_path__ + \"static/media/mongodb.37c25489.svg\";","export default __webpack_public_path__ + \"static/media/Socketio.35873a7d.png\";","import {\r\n  Text,\r\n  chakra,\r\n  Flex,\r\n  Center,\r\n  Box,\r\n  SimpleGrid,\r\n  Tooltip,\r\n  Image,\r\n  Link,\r\n} from \"@chakra-ui/react\";\r\nimport { motion } from \"framer-motion\";\r\nimport react from \"./Images/react.svg\";\r\nimport StyledComponents from \"./Images/StyledComponents.png\";\r\nimport Chakra from \"./Images/Chakra.jpg\";\r\nimport nodejs from \"./Images/nodejs.svg\";\r\nimport mongodb from \"./Images/mongodb.svg\";\r\nimport Socketio from \"./Images/Socketio.png\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Flex direction=\"column\" alignItems=\"center\">\r\n      <Center>\r\n        <Text fontFamily=\"Rubik\" fontSize=\"50px\" mt=\"1rem\">\r\n          Thanks for checking out Munchies,\r\n        </Text>\r\n      </Center>\r\n      <Center>\r\n        <Text fontSize=\"50px\" fontFamily=\"Rubik\" mt=\"1rem\">\r\n          {\" \"}\r\n          A{\" \"}\r\n          <chakra.span color=\"#ffa500\" textDecoration=\"underline\">\r\n            XHacks 2021\r\n          </chakra.span>{\" \"}\r\n          submission.\r\n        </Text>\r\n      </Center>\r\n\r\n      <Box mt=\"2rem\" w=\"50%\">\r\n        <Text\r\n          fontFamily=\"Rubik\"\r\n          fontSize=\"25px\"\r\n          textDecoration=\"underline\"\r\n          fontWeight=\"semibold\"\r\n          textAlign=\"center\"\r\n        >\r\n          Why did we create Munchies?\r\n        </Text>\r\n        <Text fontFamily=\"Rubik\" fontSize=\"20px\" textAlign=\"center\">\r\n          We know that the last year has been a challenge for all of us,\r\n          especially small businesses and restaurants. The pandemic forced many\r\n          of our favorite restaurants to close down and wanted to help them.\r\n          With Munchies, you and your friends can see local restaurants and\r\n          spots in your neighborhood that you otherwise wouldn't have known\r\n          about. What are you waiting for? Support your neighborhood and satisfy\r\n          your cravings!\r\n        </Text>\r\n      </Box>\r\n      <Box mb=\"3rem\" w=\"50%\" mt=\"3rem\">\r\n        <Text\r\n          fontFamily=\"Rubik\"\r\n          fontSize=\"25px\"\r\n          textDecoration=\"underline\"\r\n          fontWeight=\"semibold\"\r\n          textAlign=\"center\"\r\n        >\r\n          Our Technologies\r\n        </Text>\r\n        <Center>\r\n          <SimpleGrid columns={[2, 2, 3, 3]} spacing={20} mt=\"2rem\">\r\n            <motion.div whileHover={{ scale: 1.1 }}>\r\n              <Tooltip\r\n                hasArrow\r\n                label=\"React\"\r\n                bg=\"gray.300\"\r\n                color=\"black\"\r\n                arrowSize={15}\r\n                gutter=\"20\"\r\n              >\r\n                <Image src={react} boxSize=\"100px\" />\r\n              </Tooltip>\r\n            </motion.div>\r\n            <motion.div whileHover={{ scale: 1.1 }}>\r\n              <Tooltip\r\n                hasArrow\r\n                label=\"Styled Components\"\r\n                bg=\"gray.300\"\r\n                color=\"black\"\r\n                arrowSize={15}\r\n                gutter=\"20\"\r\n              >\r\n                <Image src={StyledComponents} boxSize=\"100px\" />\r\n              </Tooltip>\r\n            </motion.div>\r\n            <motion.div whileHover={{ scale: 1.1 }}>\r\n              <Tooltip\r\n                hasArrow\r\n                label=\"ChakraUI\"\r\n                bg=\"gray.300\"\r\n                color=\"black\"\r\n                arrowSize={15}\r\n                gutter=\"20\"\r\n              >\r\n                <Image src={Chakra} boxSize=\"100px\" />\r\n              </Tooltip>\r\n            </motion.div>\r\n            <motion.div whileHover={{ scale: 1.1 }}>\r\n              <Tooltip\r\n                hasArrow\r\n                label=\"Node\"\r\n                bg=\"gray.300\"\r\n                color=\"black\"\r\n                arrowSize={15}\r\n                gutter=\"20\"\r\n              >\r\n                <Image src={nodejs} boxSize=\"100px\" />\r\n              </Tooltip>\r\n            </motion.div>\r\n            <motion.div whileHover={{ scale: 1.1 }}>\r\n              <Tooltip\r\n                hasArrow\r\n                label=\"MongoDB\"\r\n                bg=\"gray.300\"\r\n                color=\"black\"\r\n                arrowSize={15}\r\n                gutter=\"20\"\r\n              >\r\n                <Image src={mongodb} boxSize=\"100px\" />\r\n              </Tooltip>\r\n            </motion.div>\r\n            <motion.div whileHover={{ scale: 1.1 }}>\r\n              <Tooltip\r\n                hasArrow\r\n                label=\"Socket.io\"\r\n                bg=\"gray.300\"\r\n                color=\"black\"\r\n                arrowSize={15}\r\n                gutter=\"20\"\r\n              >\r\n                <Image src={Socketio} boxSize=\"100px\" />\r\n              </Tooltip>\r\n            </motion.div>\r\n          </SimpleGrid>\r\n        </Center>\r\n      </Box>\r\n      <Box mb=\"3rem\" w=\"50%\" mt=\"3rem\">\r\n        <Text\r\n          fontFamily=\"Rubik\"\r\n          fontSize=\"25px\"\r\n          textDecoration=\"underline\"\r\n          fontWeight=\"semibold\"\r\n          textAlign=\"center\"\r\n        >\r\n          Our Team\r\n        </Text>\r\n        <Center>\r\n          <Link\r\n            href=\"https://github.com/brendangubbins\"\r\n            target=\"_blank\"\r\n            mt=\"1rem\"\r\n            fontFamily=\"Rubik\"\r\n            _hover={{ color: \"#ffc108\" }}\r\n          >\r\n            Brendan Gubbins\r\n          </Link>\r\n        </Center>\r\n        <Center>\r\n          <Link\r\n            href=\"https://github.com/auto-kad\"\r\n            target=\"_blank\"\r\n            mt=\"1rem\"\r\n            fontFamily=\"Rubik\"\r\n            _hover={{ color: \"#ffc108\" }}\r\n          >\r\n            Abedin Kadir\r\n          </Link>\r\n        </Center>\r\n        <Center>\r\n          <Link\r\n            href=\"https://github.com/Slaeh\"\r\n            target=\"_blank\"\r\n            mt=\"1rem\"\r\n            fontFamily=\"Rubik\"\r\n            _hover={{ color: \"#ffc108\" }}\r\n          >\r\n            Harjit Liyal\r\n          </Link>\r\n        </Center>\r\n        <Center>\r\n          <Link\r\n            href=\"https://github.com/epaez1996\"\r\n            target=\"_blank\"\r\n            mt=\"1rem\"\r\n            fontFamily=\"Rubik\"\r\n            _hover={{ color: \"#ffc108\" }}\r\n          >\r\n            Edward Paez\r\n          </Link>\r\n        </Center>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <App />\r\n  </ChakraProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}